Search.setIndex({"docnames": ["autoapi/index", "autoapi/lasdi/enums/index", "autoapi/lasdi/fd/index", "autoapi/lasdi/gp/index", "autoapi/lasdi/gplasdi/index", "autoapi/lasdi/index", "autoapi/lasdi/inputs/index", "autoapi/lasdi/latent_dynamics/index", "autoapi/lasdi/latent_dynamics/sindy/index", "autoapi/lasdi/latent_space/index", "autoapi/lasdi/param/index", "autoapi/lasdi/physics/burgers1d/index", "autoapi/lasdi/physics/index", "autoapi/lasdi/postprocess/index", "autoapi/lasdi/timing/index", "autoapi/lasdi/workflow/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/lasdi/enums/index.rst", "autoapi/lasdi/fd/index.rst", "autoapi/lasdi/gp/index.rst", "autoapi/lasdi/gplasdi/index.rst", "autoapi/lasdi/index.rst", "autoapi/lasdi/inputs/index.rst", "autoapi/lasdi/latent_dynamics/index.rst", "autoapi/lasdi/latent_dynamics/sindy/index.rst", "autoapi/lasdi/latent_space/index.rst", "autoapi/lasdi/param/index.rst", "autoapi/lasdi/physics/burgers1d/index.rst", "autoapi/lasdi/physics/index.rst", "autoapi/lasdi/postprocess/index.rst", "autoapi/lasdi/timing/index.rst", "autoapi/lasdi/workflow/index.rst", "index.rst"], "titles": ["API Reference", "lasdi.enums", "lasdi.fd", "lasdi.gp", "lasdi.gplasdi", "lasdi", "lasdi.inputs", "lasdi.latent_dynamics", "lasdi.latent_dynamics.sindy", "lasdi.latent_space", "lasdi.param", "lasdi.physics.burgers1d", "lasdi.physics", "lasdi.postprocess", "lasdi.timing", "lasdi.workflow", "LaSDI documentation"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "page": 0, "contain": [0, 2, 7], "auto": 0, "gener": [0, 1, 3, 4, 10, 11, 12], "document": 0, "1": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13], "lasdi": 0, "enum": [0, 5], "fd": [0, 5, 8], "gp": [0, 4, 5], "gplasdi": [0, 5, 15, 16], "input": [0, 3, 5], "latent_dynam": [0, 4, 5], "sindi": [0, 3, 7, 13], "latent_spac": [0, 4, 5], "param": [0, 3, 4, 5, 11, 12, 13], "physic": [0, 4, 5, 9, 10, 13, 15, 16], "burgers1d": [0, 12, 15], "postprocess": [0, 5], "time": [0, 2, 4, 5, 7, 8, 11, 12], "workflow": [0, 5], "creat": [0, 8], "sphinx": 0, "autoapi": 0, "nextstep": 1, "base": [1, 2, 7, 8, 9, 11, 12, 16], "enumer": 1, "deriv": [1, 2, 8], "from": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14], "defin": [1, 2, 9], "new": [1, 4, 8, 10], "train": [1, 3, 4, 10], "picksampl": 1, "2": [1, 2, 4, 10, 11, 12], "runsampl": 1, "3": [1, 2, 11, 12], "collectsampl": 1, "4": [1, 2, 10], "result": [1, 4], "unexecut": 1, "success": [1, 7], "fail": 1, "complet": 1, "stencil": 2, "leftbdrdepth": 2, "int": [2, 3, 4, 7, 8, 9, 10, 11, 12], "0": [2, 4, 6, 9, 10, 11, 12, 13], "leftbdrwidth": 2, "list": [2, 3, 4, 6, 9, 10, 11, 12, 14], "leftbdrstencil": 2, "float": [2, 4, 8, 9, 10, 11, 12], "leftbdrnorm": 2, "suppos": [2, 7], "interiorstencil": 2, "i": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16], "an": [2, 4, 6, 7, 10, 12, 14], "arrai": [2, 3, 4, 7, 8, 10, 11, 12], "length": [2, 10], "n": [2, 3, 7, 10, 12], "interiorindex": 2, "further": [2, 10], "underli": [2, 6, 12], "seri": [2, 8], "nx": [2, 10, 11], "point": [2, 3, 6, 11, 12], "x": [2, 3, 4, 9, 11], "t_0": [2, 7, 8], "t_": 2, "assum": [2, 3, 4, 7, 8, 11, 12], "index": [2, 4, 12, 14], "interior": 2, "too": 2, "close": 2, "we": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "approxim": 2, "z": [2, 7, 8], "t_i": 2, "follow": [2, 10, 11], "pprox": 2, "c_0": 2, "c_": 2, "where": [2, 3, 6, 7, 8, 10, 11], "c_k": 2, "k": [2, 3, 4, 7, 8, 9, 10, 14], "note": [2, 10], "indic": 2, "mai": [2, 6], "neg": 2, "posit": 2, "thu": [2, 3, 4, 6, 7, 8, 10], "tell": 2, "u": [2, 4, 6, 8, 11], "how": [2, 4, 10, 14], "construct": 2, "finit": [2, 8], "differ": [2, 7, 8, 11, 12], "scheme": 2, "awai": 2, "boundari": 2, "For": [2, 3, 4, 9, 11], "instanc": [2, 8, 12], "central": 2, "correspond": [2, 3, 4, 6, 8, 10, 11, 14], "z_": 2, "ascend": [2, 7, 8], "order": [2, 7, 8, 16], "numpi": [2, 3, 4, 7, 8, 9, 10, 11, 12], "ndarrai": [2, 3, 4, 7, 8, 9, 10, 11, 12], "getoper": 2, "period": 2, "bool": [2, 6, 7, 8, 10, 11, 12], "fals": [2, 6, 7, 8, 12, 15], "tupl": [2, 3, 8, 9, 10, 11, 12], "scipi": 2, "spars": 2, "spmatrix": 2, "torch": [2, 4, 7, 8, 9, 11, 12], "tensor": [2, 4, 7, 8, 9, 11, 12], "The": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14], "act": [2, 6], "abstract": 2, "user": [2, 6, 7, 12, 14], "ha": [2, 3, 6, 7, 8, 10, 14], "mathbb": [2, 3], "r": [2, 3], "d": [2, 10, 16], "stamp": 2, "ar": [2, 3, 6, 8, 10, 11, 14], "evenli": 2, "space": [2, 3, 4, 7, 8, 9, 10, 15, 16], "That": [2, 6, 10], "some": [2, 6, 7], "delta": 2, "t": [2, 8], "t_k": 2, "delta_t": 2, "each": [2, 3, 4, 6, 7, 8, 9, 10], "also": [2, 10, 16], "want": [2, 4, 7, 8, 14], "us": [2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 16], "method": [2, 4, 10, 12, 14, 16], "build": [2, 3, 8, 10], "hous": [2, 6, 9, 10, 11, 12], "oper": 2, "matrix": [2, 7, 8], "appli": [2, 16], "one": [2, 3, 4, 6, 7, 10, 14], "compon": [2, 3, 4, 7, 8, 11], "doe": [2, 6], "work": 2, "Then": 2, "dxi": 2, "xi": 2, "vector": [2, 9, 10], "whose": [2, 3, 4, 7, 8, 10, 14], "th": [2, 3, 4, 7, 8, 9, 10, 11, 12, 14], "entri": [2, 7, 8], "hold": [2, 3, 4, 7, 8, 10, 12], "select": [2, 6], "x_i": 2, "here": 2, "To": 2, "first": [2, 3, 4], "set": [2, 3, 4, 6, 7, 9, 10], "up": [2, 10], "give": [2, 4], "correct": 2, "t_j": 2, "whenev": 2, "j": [2, 3, 4, 7, 8, 10, 11, 12], "rest": 2, "function": [2, 6, 7, 8, 12, 14], "adjust": 2, "last": 2, "few": 2, "row": [2, 3, 4, 8], "so": [2, 6], "standalon": 2, "you": [2, 9, 11, 14], "shouldn": 2, "directli": 2, "rather": 2, "should": [2, 4, 6, 7, 8, 10, 11, 12, 14], "sub": [2, 6, 7, 12], "below": [2, 10], "implement": [2, 7], "specif": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14], "thei": [2, 14], "rule": 2, "left": [2, 11, 12], "right": [2, 11, 12], "A": [2, 3, 4, 6, 7, 8, 9, 10, 16], "boolean": [2, 7, 8], "specifi": [2, 3, 4, 6, 7, 8, 10, 12, 14], "treat": 2, "todo": 2, "what": [2, 4, 7, 10], "two": [2, 8], "And": 2, "convert": [2, 10], "scipy_coo": 2, "sbp12": 2, "5": [2, 13], "sbp24": 2, "6": [2, 13], "sbp36": 2, "7": 2, "8": 2, "9": 2, "sbp48": 2, "10": [2, 13], "11": 2, "12": 2, "fddict": 2, "fit_gp": 3, "y": 3, "sklearn": [3, 4], "gaussian_process": [3, 4], "gaussianprocessregressor": [3, 4], "column": [3, 4], "If": [3, 6, 7, 8, 14], "shape": [3, 4, 7, 8, 9, 10, 11, 12], "regressor": [3, 4], "In": [3, 6, 7, 8], "case": [3, 6, 7, 8, 10], "m": [3, 10, 16], "target": 3, "return": [3, 6, 7, 8, 9, 10, 11, 12, 14], "object": [3, 4, 6, 7, 8, 9, 10, 14], "which": [3, 4, 7, 8, 10], "make": [3, 4, 9, 14], "predict": [3, 4, 16], "coeffici": [3, 4, 7, 8], "latent": [3, 4, 7, 8, 9, 15, 16], "dynam": [3, 4, 7, 8, 9, 16], "independ": 3, "other": [3, 6, 9], "paramet": [3, 4, 7, 8, 9, 10, 11, 12, 13], "2d": [3, 4, 7, 8, 10, 11, 12], "n_train": [3, 10], "n_coef": 3, "number": [3, 4, 7, 8, 10, 12], "exampl": [3, 10], "valu": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14], "element": [3, 4, 7, 8, 9, 10, 12, 14], "eval_gp": 3, "gp_list": [3, 4], "param_grid": [3, 4, 9], "comput": [3, 4, 7, 8, 11, 12, 13, 16], "mean": [3, 4], "standard": [3, 4], "deviat": [3, 4], "grid": [3, 10, 11, 12], "combin": [3, 4, 7, 8, 9, 10], "test": [3, 4, 10], "evalu": [3, 4, 11, 12, 16], "respect": [3, 10, 14], "variabl": [3, 10, 11], "likewis": 3, "second": [3, 10], "distribut": [3, 4], "sample_coef": 3, "n_sampl": [3, 4, 13], "od": [3, 16], "sampl": [3, 4, 7, 10], "those": [3, 9, 14], "parma": 3, "draw": [3, 4], "when": [3, 4, 7, 8, 10, 11, 12], "e": 3, "singl": [3, 7, 8, 10], "get": 3, "ensembl": 3, "fom": [3, 4, 9, 15], "n_": 3, "paper": 3, "average_rom": 4, "autoencod": [4, 9, 13, 15, 16], "latentdynam": [4, 7, 8], "simul": [4, 7, 8], "collect": 4, "posterior": 4, "": [4, 6, 7, 8, 9, 10, 11, 12, 14], "determin": 4, "forward": [4, 9], "start": [4, 7, 8, 14], "encod": [4, 7, 8, 9], "initi": [4, 7, 8, 9, 11, 12, 15], "condit": [4, 7, 8, 9, 11, 12], "describ": 4, "match": [4, 9, 12], "sample_rom": 4, "solv": [4, 10, 11, 12, 16], "solut": [4, 7, 8, 11, 12, 16], "store": [4, 7, 8, 9, 14], "frame": [4, 8], "do": [4, 7, 9], "n_param": [4, 10], "n_t": 4, "n_z": [4, 9], "ic": [4, 9, 11, 12], "drawn": 4, "get_fom_max_std": 4, "zi": 4, "maximum": [4, 10, 13], "across": 4, "trajectori": [4, 8], "4d": 4, "n_test": [4, 10], "axi": 4, "re": 4, "drew": 4, "step": [4, 7, 8, 11, 12, 15], "record": [4, 14], "repres": [4, 7, 8], "let": [4, 8], "map": [4, 9, 16], "l": [4, 16], "n_fom": 4, "std": 4, "figur": 4, "out": 4, "largest": 4, "integ": [4, 14], "pair": 4, "greatest": 4, "optimizer_to": 4, "optim": [4, 7, 8], "devic": 4, "str": [4, 6, 9, 10, 11, 12, 14], "none": [4, 6, 7, 8, 9, 10, 11, 12, 14, 15], "move": 4, "bayesianglasdi": 4, "param_spac": 4, "parameterspac": [4, 10], "config": [4, 8, 9, 10, 15], "dict": [4, 6, 7, 8, 9, 10, 11, 12, 14], "x_train": 4, "x_test": [4, 13], "timer": [4, 14], "lr": 4, "n_iter": 4, "max_it": 4, "max_greedy_it": 4, "ld_weight": 4, "coef_weight": 4, "mse": [4, 8], "path_checkpoint": 4, "path_result": 4, "best_loss": 4, "best_coef": 4, "restart_it": 4, "run": [4, 14], "round": 4, "get_new_sample_point": 4, "greedi": [4, 16], "process": [4, 6, 16], "through": [4, 8, 9, 16], "self": [4, 6, 7, 8, 9, 10, 11, 12, 14], "back": 4, "real": 4, "engend": 4, "see": [4, 7, 8, 10], "export": [4, 7, 8, 9, 10, 11, 12, 14], "glasdi": [4, 11, 16], "intern": [4, 8, 11], "state": [4, 7, 8, 9, 11, 12, 14], "load": [4, 7, 9, 10, 14], "dict_": [4, 6, 7, 9, 10, 14], "modifi": 4, "dictionari": [4, 6, 8, 9, 10, 11, 12, 14], "verbos": 6, "inputpars": 6, "name": [6, 10, 14], "wrapper": 6, "around": 6, "kei": [6, 10, 14], "becaus": 6, "itself": 6, "often": 6, "group": 6, "sever": 6, "constitu": 6, "structur": 6, "sequenc": [6, 7], "nest": 6, "allow": 6, "via": [6, 16], "string": [6, 10, 14], "desir": 6, "live": 6, "getinput": 6, "fallback": 6, "datatyp": 6, "famili": 6, "mani": [6, 10, 14], "particular": [6, 14], "within": 6, "anoth": [6, 14], "variou": 6, "fetch": 6, "val": 6, "more": 6, "replac": [6, 14], "continu": 6, "until": 6, "have": [6, 9, 10, 11, 14], "exhaust": 6, "all": 6, "There": 6, "import": 6, "except": 6, "next": 6, "exist": 6, "error": [6, 13], "sort": 6, "default": 6, "valid": 6, "requir": [6, 12], "final": [6, 9, 10], "rais": 6, "dim_": 7, "nt_": 7, "dim": [7, 8, 11, 12], "nt": [7, 8, 11, 12], "ncoef": [7, 8], "coef": [7, 8], "calibr": [7, 8], "dt": [7, 8, 11, 12], "compute_loss": [7, 8], "true": [7, 8, 10, 12, 13], "must": [7, 9, 12, 14], "ani": 7, "parameter": 7, "model": [7, 8, 15, 16], "need": 7, "find": [7, 8], "equat": [7, 11, 12], "take": [7, 9, 10], "between": [7, 8, 10, 11, 12], "term": [7, 8], "option": 7, "control": 7, "inform": [7, 14, 16], "alwai": 7, "least": 7, "argument": [7, 8, 9, 10, 14], "data": [7, 8, 11], "3d": [7, 8, 11, 12], "np": [7, 8], "nz": [7, 8], "he": [7, 8, 16], "descript": [7, 8, 10], "addit": 7, "loss": [7, 8], "learn": [7, 16], "onli": [7, 8, 10, 15], "lead": [7, 8], "dimens": [7, 8, 11, 12], "size": [7, 8, 9, 10, 12], "z0": [7, 8], "t_grid": [7, 8, 11, 12], "integr": [7, 8], "1d": [7, 8, 11, 12], "coefs_sampl": 7, "z0_sampl": 7, "dimension": [7, 10], "same": [7, 8, 9], "fd_type": 8, "fd_oper": 8, "coef_norm_ord": 8, "current": [8, 15], "consid": [8, 10], "three": 8, "ident": [8, 9, 14], "just": 8, "system": [8, 16], "c": [8, 11], "phi": 8, "librari": 8, "best": 8, "agre": 8, "prompt": 8, "calcul": 8, "compute_time_deriv": 8, "dataset": 8, "linear": 8, "packag": [8, 10, 16], "can": [8, 11, 14, 16], "act_dict": 9, "initial_condition_lat": 9, "nn": 9, "possibl": [9, 10], "recov": 9, "among": 9, "thing": 9, "actual": 9, "z0_i": 9, "u0_i": 9, "multilayerperceptron": 9, "layer_s": 9, "act_typ": 9, "sigmoid": 9, "reshape_index": 9, "reshape_shap": 9, "threshold": 9, "n_layer": 9, "layer": 9, "pass": [9, 14], "its": 9, "init_weight": 9, "weight": [9, 16], "matric": 9, "bia": 9, "It": [9, 10, 12, 14, 16], "noth": [9, 14], "qgrid_siz": [9, 11, 12], "space_dim": [9, 11, 12], "decod": [9, 16], "architectur": 9, "get_1dspace_from_list": 10, "param_dict": 10, "rang": 10, "type": 10, "test_space_typ": 10, "pars": 10, "turn": 10, "create_uniform_1dspac": 10, "uniform": 10, "min": 10, "max": 10, "sample_s": 10, "log_scal": 10, "minimum": 10, "logarithm": 10, "while": 10, "abov": 10, "paramrang": 10, "equival": 10, "getparam1dspac": 10, "callabl": 10, "param_list": 10, "param_nam": [10, 11, 12, 15], "train_spac": 10, "test_spac": 10, "n_init": [10, 13], "test_grid_s": 10, "test_meshgrid": 10, "createinitialtrainspac": 10, "createhypermeshgrid": 10, "detail": 10, "exactli": 10, "createhypergridspac": 10, "doc": 10, "createtestgridspac": 10, "len": 10, "n0": 10, "ni": 10, "uniqu": 10, "third": 10, "prod_": 10, "getparamet": 10, "param_vector": 10, "initial_condit": [10, 11, 12], "param_rang": 10, "equal": 10, "mesh_grid": 10, "flatten": 10, "them": [10, 14], "docstr": 10, "appendtrainspac": 10, "add": 10, "short": 10, "distinct": 10, "wa": [10, 14], "copi": [10, 14], "been": 10, "cfg": [11, 12], "a_idx": 11, "w_idx": 11, "qdim": [11, 12], "offlin": [11, 12], "grid_siz": [11, 12], "nd": [11, 12], "higher": [11, 12], "xmin": 11, "xmax": 11, "dx": 11, "tmax": 11, "x_grid": [11, 12], "maxk": 11, "convergence_threshold": 11, "along": [11, 12], "spatial": [11, 12], "exp": 11, "w": 11, "burger": 11, "effect": 11, "serial": [11, 14], "residu": [11, 12], "xhist": [11, 12], "pde": [11, 12, 16], "hand": [11, 12], "side": [11, 12], "substitut": [11, 12], "residual_burg": 11, "un": 11, "uw": 11, "idxn1": 11, "http": 11, "github": 11, "com": 11, "llnl": 11, "jacobian": 11, "solver": 11, "u0": 11, "main": [11, 15], "write": 12, "ax": 12, "generate_solut": 12, "given": 12, "offlinefom": 12, "compute_error": 13, "x_pred": 13, "rel": 13, "plot_predict": 13, "gp_dictionnari": 13, "scale": 13, "plot_gp2d": 13, "p1_mesh": 13, "p2_mesh": 13, "gp_mean": 13, "gp_std": 13, "param_train": 13, "param_label": 13, "p1": 13, "p2": 13, "plot_shap": 13, "figsiz": 13, "15": 13, "13": 13, "refin": 13, "cm": 13, "plt": 13, "jet": 13, "margin": 13, "05": 13, "heatmap2d": 13, "p1_grid": 13, "p2_grid": 13, "titl": 13, "call": 14, "alreadi": 14, "end": 14, "stop": 14, "print": 14, "report": 14, "everi": 14, "extract": 14, "attribut": 14, "ad": 14, "total": 14, "de": 14, "previous": 14, "restor": 14, "after": 14, "checkpoint": 14, "trainer_dict": 15, "latent_dict": 15, "ld_dict": 15, "physics_dict": 15, "parser": 15, "trainer": 15, "next_step": 15, "use_restart": 15, "initialize_train": 15, "restart_fil": 15, "class": 15, "accord": [15, 16], "file": 15, "avail": 15, "initialize_latent_spac": 15, "ae": 15, "initialize_phys": 15, "pick_sampl": 15, "run_sampl": 15, "collect_sampl": 15, "light": 16, "python": 16, "identif": 16, "full": 16, "govern": 16, "By": 16, "interpol": 16, "reduc": 16, "fast": 16, "accur": 16, "rom": 16, "made": 16, "feed": 16, "support": 16, "parametr": 16, "uncertainti": 16, "gaussian": 16, "api": 16, "bonnevil": 16, "christoph": 16, "xiaolong": 16, "april": 16, "tran": 16, "jun": 16, "sur": 16, "park": 16, "william": 16, "fri": 16, "daniel": 16, "messeng": 16, "siu": 16, "wun": 16, "cheung": 16, "et": 16, "al": 16, "comprehens": 16, "review": 16, "algorithm": 16, "intrus": 16, "non": 16, "arxiv": 16, "preprint": 16, "2403": 16, "10748": 16, "2024": 16, "youngsoo": 16, "choi": 16, "mechan": 16, "engin": 16, "399": 16, "2022": 16, "115436": 16, "jonathan": 16, "belof": 16, "jiun": 16, "shyan": 16, "chen": 16, "journal": 16, "489": 16, "2023": 16, "112267": 16, "david": 16, "bortz": 16, "weak": 16, "form": 16, "427": 16, "116998": 16, "richard": 16, "yeonjong": 16, "shin": 16, "tlasdi": 16, "thermodynam": 16, "05848": 16, "debojyoti": 16, "ghosh": 16, "interpret": 16, "deep": 16, "418": 16, "116535": 16, "activ": 16, "simultan": 16, "2407": 16, "00337": 16}, "objects": {"": [[5, 0, 0, "-", "lasdi"]], "lasdi": [[1, 0, 0, "-", "enums"], [2, 0, 0, "-", "fd"], [3, 0, 0, "-", "gp"], [4, 0, 0, "-", "gplasdi"], [6, 0, 0, "-", "inputs"], [7, 0, 0, "-", "latent_dynamics"], [9, 0, 0, "-", "latent_space"], [10, 0, 0, "-", "param"], [12, 0, 0, "-", "physics"], [13, 0, 0, "-", "postprocess"], [14, 0, 0, "-", "timing"], [15, 0, 0, "-", "workflow"]], "lasdi.enums": [[1, 1, 1, "", "NextStep"], [1, 1, 1, "", "Result"]], "lasdi.enums.NextStep": [[1, 2, 1, "", "CollectSample"], [1, 2, 1, "", "PickSample"], [1, 2, 1, "", "RunSample"], [1, 2, 1, "", "Train"]], "lasdi.enums.Result": [[1, 2, 1, "", "Complete"], [1, 2, 1, "", "Fail"], [1, 2, 1, "", "Success"], [1, 2, 1, "", "Unexecuted"]], "lasdi.fd": [[2, 3, 1, "", "FDdict"], [2, 1, 1, "", "SBP12"], [2, 1, 1, "", "SBP24"], [2, 1, 1, "", "SBP36"], [2, 1, 1, "", "SBP48"], [2, 1, 1, "", "Stencil"]], "lasdi.fd.SBP12": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.SBP24": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.SBP36": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.SBP48": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.Stencil": [[2, 4, 1, "", "convert"], [2, 4, 1, "", "getOperators"], [2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.gp": [[3, 5, 1, "", "eval_gp"], [3, 5, 1, "", "fit_gps"], [3, 5, 1, "", "sample_coefs"]], "lasdi.gplasdi": [[4, 1, 1, "", "BayesianGLaSDI"], [4, 5, 1, "", "average_rom"], [4, 5, 1, "", "get_fom_max_std"], [4, 5, 1, "", "optimizer_to"], [4, 5, 1, "", "sample_roms"]], "lasdi.gplasdi.BayesianGLaSDI": [[4, 2, 1, "", "MSE"], [4, 2, 1, "", "X_test"], [4, 2, 1, "", "X_train"], [4, 2, 1, "", "autoencoder"], [4, 2, 1, "", "best_coefs"], [4, 2, 1, "", "best_loss"], [4, 2, 1, "", "coef_weight"], [4, 4, 1, "", "export"], [4, 4, 1, "", "get_new_sample_point"], [4, 2, 1, "", "latent_dynamics"], [4, 2, 1, "", "ld_weight"], [4, 4, 1, "", "load"], [4, 2, 1, "", "lr"], [4, 2, 1, "", "max_greedy_iter"], [4, 2, 1, "", "max_iter"], [4, 2, 1, "", "n_iter"], [4, 2, 1, "", "n_samples"], [4, 2, 1, "", "optimizer"], [4, 2, 1, "", "param_space"], [4, 2, 1, "", "path_checkpoint"], [4, 2, 1, "", "path_results"], [4, 2, 1, "", "physics"], [4, 2, 1, "", "restart_iter"], [4, 2, 1, "", "timer"], [4, 4, 1, "", "train"]], "lasdi.inputs": [[6, 1, 1, "", "InputParser"], [6, 3, 1, "", "verbose"]], "lasdi.inputs.InputParser": [[6, 2, 1, "", "dict_"], [6, 4, 1, "", "getInput"], [6, 2, 1, "", "name"]], "lasdi.latent_dynamics": [[7, 1, 1, "", "LatentDynamics"], [8, 0, 0, "-", "sindy"]], "lasdi.latent_dynamics.LatentDynamics": [[7, 4, 1, "", "calibrate"], [7, 2, 1, "", "coefs"], [7, 2, 1, "", "dim"], [7, 4, 1, "", "export"], [7, 4, 1, "", "load"], [7, 2, 1, "", "ncoefs"], [7, 2, 1, "", "nt"], [7, 4, 1, "", "sample"], [7, 4, 1, "", "simulate"]], "lasdi.latent_dynamics.sindy": [[8, 1, 1, "", "SINDy"]], "lasdi.latent_dynamics.sindy.SINDy": [[8, 2, 1, "", "MSE"], [8, 4, 1, "", "calibrate"], [8, 2, 1, "", "coef_norm_order"], [8, 4, 1, "", "compute_time_derivative"], [8, 4, 1, "", "export"], [8, 2, 1, "", "fd"], [8, 2, 1, "", "fd_oper"], [8, 2, 1, "", "fd_type"], [8, 2, 1, "", "ncoefs"], [8, 4, 1, "", "simulate"]], "lasdi.latent_space": [[9, 1, 1, "", "Autoencoder"], [9, 1, 1, "", "MultiLayerPerceptron"], [9, 3, 1, "", "act_dict"], [9, 5, 1, "", "initial_condition_latent"]], "lasdi.latent_space.Autoencoder": [[9, 2, 1, "", "decoder"], [9, 2, 1, "", "encoder"], [9, 4, 1, "", "export"], [9, 4, 1, "", "forward"], [9, 4, 1, "", "load"], [9, 2, 1, "", "n_z"], [9, 2, 1, "", "qgrid_size"], [9, 2, 1, "", "space_dim"]], "lasdi.latent_space.MultiLayerPerceptron": [[9, 2, 1, "", "act_type"], [9, 4, 1, "", "forward"], [9, 4, 1, "", "init_weight"], [9, 2, 1, "", "layer_sizes"], [9, 2, 1, "", "layers"], [9, 2, 1, "", "n_layers"], [9, 2, 1, "", "reshape_index"], [9, 2, 1, "", "reshape_shape"]], "lasdi.param": [[10, 1, 1, "", "ParameterSpace"], [10, 5, 1, "", "create_uniform_1dspace"], [10, 3, 1, "", "getParam1DSpace"], [10, 5, 1, "", "get_1dspace_from_list"]], "lasdi.param.ParameterSpace": [[10, 4, 1, "", "appendTrainSpace"], [10, 4, 1, "", "createHyperGridSpace"], [10, 4, 1, "", "createHyperMeshGrid"], [10, 4, 1, "", "createInitialTrainSpace"], [10, 4, 1, "", "createTestGridSpace"], [10, 4, 1, "", "export"], [10, 4, 1, "", "getParameter"], [10, 4, 1, "", "load"], [10, 2, 1, "", "n_init"], [10, 2, 1, "", "n_param"], [10, 4, 1, "", "n_test"], [10, 4, 1, "", "n_train"], [10, 2, 1, "", "param_list"], [10, 2, 1, "", "param_name"], [10, 2, 1, "", "test_grid_sizes"], [10, 2, 1, "", "test_meshgrid"], [10, 2, 1, "", "test_space"], [10, 2, 1, "", "train_space"]], "lasdi.physics": [[12, 1, 1, "", "OfflineFOM"], [12, 1, 1, "", "Physics"], [11, 0, 0, "-", "burgers1d"]], "lasdi.physics.OfflineFOM": [[12, 2, 1, "", "dim"], [12, 2, 1, "", "dt"], [12, 4, 1, "", "export"], [12, 4, 1, "", "generate_solutions"], [12, 2, 1, "", "grid_size"], [12, 2, 1, "", "nt"], [12, 2, 1, "", "offline"], [12, 2, 1, "", "qdim"], [12, 2, 1, "", "qgrid_size"], [12, 2, 1, "", "t_grid"], [12, 2, 1, "", "x_grid"]], "lasdi.physics.Physics": [[12, 2, 1, "", "dim"], [12, 2, 1, "", "dt"], [12, 4, 1, "", "export"], [12, 4, 1, "", "generate_solutions"], [12, 2, 1, "", "grid_size"], [12, 4, 1, "", "initial_condition"], [12, 2, 1, "", "nt"], [12, 2, 1, "", "offline"], [12, 2, 1, "", "param_name"], [12, 2, 1, "", "qdim"], [12, 2, 1, "", "qgrid_size"], [12, 4, 1, "", "residual"], [12, 4, 1, "", "solve"], [12, 2, 1, "", "t_grid"], [12, 2, 1, "", "x_grid"]], "lasdi.physics.burgers1d": [[11, 1, 1, "", "Burgers1D"], [11, 5, 1, "", "jacobian"], [11, 5, 1, "", "main"], [11, 5, 1, "", "residual_burgers"], [11, 5, 1, "", "solver"]], "lasdi.physics.burgers1d.Burgers1D": [[11, 2, 1, "", "a_idx"], [11, 2, 1, "", "convergence_threshold"], [11, 2, 1, "", "dim"], [11, 2, 1, "", "dt"], [11, 2, 1, "", "dx"], [11, 4, 1, "", "export"], [11, 2, 1, "", "grid_size"], [11, 4, 1, "", "initial_condition"], [11, 2, 1, "", "maxk"], [11, 2, 1, "", "nt"], [11, 2, 1, "", "offline"], [11, 2, 1, "", "qdim"], [11, 2, 1, "", "qgrid_size"], [11, 4, 1, "", "residual"], [11, 4, 1, "", "solve"], [11, 2, 1, "", "t_grid"], [11, 2, 1, "", "tmax"], [11, 2, 1, "", "w_idx"], [11, 2, 1, "", "x_grid"], [11, 2, 1, "", "xmax"], [11, 2, 1, "", "xmin"]], "lasdi.postprocess": [[13, 5, 1, "", "compute_errors"], [13, 5, 1, "", "heatmap2d"], [13, 5, 1, "", "plot_gp2d"], [13, 5, 1, "", "plot_prediction"]], "lasdi.timing": [[14, 1, 1, "", "Timer"]], "lasdi.timing.Timer": [[14, 2, 1, "", "calls"], [14, 4, 1, "", "end"], [14, 4, 1, "", "export"], [14, 4, 1, "", "load"], [14, 2, 1, "", "names"], [14, 4, 1, "", "print"], [14, 4, 1, "", "start"], [14, 2, 1, "", "starts"], [14, 2, 1, "", "times"]], "lasdi.workflow": [[15, 5, 1, "", "collect_samples"], [15, 5, 1, "", "initialize_latent_space"], [15, 5, 1, "", "initialize_physics"], [15, 5, 1, "", "initialize_trainer"], [15, 3, 1, "", "latent_dict"], [15, 3, 1, "", "ld_dict"], [15, 5, 1, "", "main"], [15, 3, 1, "", "parser"], [15, 3, 1, "", "physics_dict"], [15, 5, 1, "", "pick_samples"], [15, 5, 1, "", "run_samples"], [15, 5, 1, "", "step"], [15, 3, 1, "", "trainer_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:data", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "data", "Python data"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": [0, 16], "lasdi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "enum": 1, "class": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14], "modul": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 15], "content": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "fd": 2, "attribut": [2, 6, 9, 10, 15], "gp": 3, "function": [3, 4, 9, 10, 11, 13, 15], "gplasdi": 4, "return": 4, "submodul": [5, 7, 12], "input": 6, "latent_dynam": [7, 8], "packag": [7, 12], "sindi": 8, "latent_spac": 9, "param": 10, "physic": [11, 12], "burgers1d": 11, "postprocess": 13, "time": 14, "workflow": 15, "document": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "lasdi.enums": [[1, "module-lasdi.enums"]], "Classes": [[1, "classes"], [2, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"]], "lasdi.fd": [[2, "module-lasdi.fd"]], "Attributes": [[2, "attributes"], [6, "attributes"], [9, "attributes"], [10, "attributes"], [15, "attributes"]], "lasdi.gp": [[3, "module-lasdi.gp"]], "Functions": [[3, "functions"], [4, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [13, "functions"], [15, "functions"]], "lasdi.gplasdi": [[4, "module-lasdi.gplasdi"]], "Returns:": [[4, "returns"]], "lasdi": [[5, "module-lasdi"]], "Submodules": [[5, "submodules"], [7, "submodules"], [12, "submodules"]], "lasdi.inputs": [[6, "module-lasdi.inputs"]], "lasdi.latent_dynamics": [[7, "module-lasdi.latent_dynamics"]], "Package Contents": [[7, "package-contents"], [12, "package-contents"]], "lasdi.latent_dynamics.sindy": [[8, "module-lasdi.latent_dynamics.sindy"]], "lasdi.latent_space": [[9, "module-lasdi.latent_space"]], "lasdi.param": [[10, "module-lasdi.param"]], "lasdi.physics.burgers1d": [[11, "module-lasdi.physics.burgers1d"]], "lasdi.physics": [[12, "module-lasdi.physics"]], "lasdi.postprocess": [[13, "module-lasdi.postprocess"]], "lasdi.timing": [[14, "module-lasdi.timing"]], "lasdi.workflow": [[15, "module-lasdi.workflow"]], "LaSDI documentation": [[16, "lasdi-documentation"]], "Contents:": [[16, null]], "References": [[16, "references"]]}, "indexentries": {"collectsample (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.CollectSample"]], "complete (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Complete"]], "fail (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Fail"]], "nextstep (class in lasdi.enums)": [[1, "lasdi.enums.NextStep"]], "picksample (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.PickSample"]], "result (class in lasdi.enums)": [[1, "lasdi.enums.Result"]], "runsample (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.RunSample"]], "success (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Success"]], "train (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.Train"]], "unexecuted (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Unexecuted"]], "lasdi.enums": [[1, "module-lasdi.enums"]], "module": [[1, "module-lasdi.enums"], [2, "module-lasdi.fd"], [3, "module-lasdi.gp"], [4, "module-lasdi.gplasdi"], [5, "module-lasdi"], [6, "module-lasdi.inputs"], [7, "module-lasdi.latent_dynamics"], [8, "module-lasdi.latent_dynamics.sindy"], [9, "module-lasdi.latent_space"], [10, "module-lasdi.param"], [11, "module-lasdi.physics.burgers1d"], [12, "module-lasdi.physics"], [13, "module-lasdi.postprocess"], [14, "module-lasdi.timing"], [15, "module-lasdi.workflow"]], "fddict (in module lasdi.fd)": [[2, "lasdi.fd.FDdict"]], "sbp12 (class in lasdi.fd)": [[2, "lasdi.fd.SBP12"]], "sbp24 (class in lasdi.fd)": [[2, "lasdi.fd.SBP24"]], "sbp36 (class in lasdi.fd)": [[2, "lasdi.fd.SBP36"]], "sbp48 (class in lasdi.fd)": [[2, "lasdi.fd.SBP48"]], "stencil (class in lasdi.fd)": [[2, "lasdi.fd.Stencil"]], "convert() (lasdi.fd.stencil method)": [[2, "lasdi.fd.Stencil.convert"]], "getoperators() (lasdi.fd.stencil method)": [[2, "lasdi.fd.Stencil.getOperators"]], "interiorindexes (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.interiorIndexes"]], "interiorindexes (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.interiorIndexes"]], "interiorindexes (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.interiorIndexes"]], "interiorindexes (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.interiorIndexes"]], "interiorindexes (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.interiorIndexes"]], "interiorstencils (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.interiorStencils"]], "interiorstencils (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.interiorStencils"]], "interiorstencils (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.interiorStencils"]], "interiorstencils (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.interiorStencils"]], "interiorstencils (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.interiorStencils"]], "lasdi.fd": [[2, "module-lasdi.fd"]], "leftbdrdepth (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrDepth"]], "leftbdrnorm (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrNorm"]], "leftbdrstencils (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrStencils"]], "leftbdrwidth (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrWidth"]], "eval_gp() (in module lasdi.gp)": [[3, "lasdi.gp.eval_gp"]], "fit_gps() (in module lasdi.gp)": [[3, "lasdi.gp.fit_gps"]], "lasdi.gp": [[3, "module-lasdi.gp"]], "sample_coefs() (in module lasdi.gp)": [[3, "lasdi.gp.sample_coefs"]], "bayesianglasdi (class in lasdi.gplasdi)": [[4, "lasdi.gplasdi.BayesianGLaSDI"]], "mse (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.MSE"]], "x_test (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.X_test"]], "x_train (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.X_train"]], "autoencoder (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.autoencoder"]], "average_rom() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.average_rom"]], "best_coefs (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.best_coefs"]], "best_loss (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.best_loss"]], "coef_weight (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.coef_weight"]], "export() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.export"]], "get_fom_max_std() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.get_fom_max_std"]], "get_new_sample_point() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.get_new_sample_point"]], "lasdi.gplasdi": [[4, "module-lasdi.gplasdi"]], "latent_dynamics (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.latent_dynamics"]], "ld_weight (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.ld_weight"]], "load() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.load"]], "lr (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.lr"]], "max_greedy_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.max_greedy_iter"]], "max_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.max_iter"]], "n_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.n_iter"]], "n_samples (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.n_samples"]], "optimizer (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.optimizer"]], "optimizer_to() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.optimizer_to"]], "param_space (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.param_space"]], "path_checkpoint (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.path_checkpoint"]], "path_results (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.path_results"]], "physics (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.physics"]], "restart_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.restart_iter"]], "sample_roms() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.sample_roms"]], "timer (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.timer"]], "train() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.train"]], "lasdi": [[5, "module-lasdi"]], "inputparser (class in lasdi.inputs)": [[6, "lasdi.inputs.InputParser"]], "dict_ (lasdi.inputs.inputparser attribute)": [[6, "lasdi.inputs.InputParser.dict_"]], "getinput() (lasdi.inputs.inputparser method)": [[6, "lasdi.inputs.InputParser.getInput"]], "lasdi.inputs": [[6, "module-lasdi.inputs"]], "name (lasdi.inputs.inputparser attribute)": [[6, "lasdi.inputs.InputParser.name"]], "verbose (in module lasdi.inputs)": [[6, "lasdi.inputs.verbose"]], "latentdynamics (class in lasdi.latent_dynamics)": [[7, "lasdi.latent_dynamics.LatentDynamics"]], "calibrate() (lasdi.latent_dynamics.latentdynamics method)": [[7, "lasdi.latent_dynamics.LatentDynamics.calibrate"]], "coefs (lasdi.latent_dynamics.latentdynamics attribute)": [[7, "lasdi.latent_dynamics.LatentDynamics.coefs"]], "dim (lasdi.latent_dynamics.latentdynamics attribute)": [[7, "lasdi.latent_dynamics.LatentDynamics.dim"]], "export() (lasdi.latent_dynamics.latentdynamics method)": [[7, "lasdi.latent_dynamics.LatentDynamics.export"]], "lasdi.latent_dynamics": [[7, "module-lasdi.latent_dynamics"]], "load() (lasdi.latent_dynamics.latentdynamics method)": [[7, "lasdi.latent_dynamics.LatentDynamics.load"]], "ncoefs (lasdi.latent_dynamics.latentdynamics attribute)": [[7, "lasdi.latent_dynamics.LatentDynamics.ncoefs"]], "nt (lasdi.latent_dynamics.latentdynamics attribute)": [[7, "lasdi.latent_dynamics.LatentDynamics.nt"]], "sample() (lasdi.latent_dynamics.latentdynamics method)": [[7, "lasdi.latent_dynamics.LatentDynamics.sample"]], "simulate() (lasdi.latent_dynamics.latentdynamics method)": [[7, "lasdi.latent_dynamics.LatentDynamics.simulate"]], "mse (lasdi.latent_dynamics.sindy.sindy attribute)": [[8, "lasdi.latent_dynamics.sindy.SINDy.MSE"]], "sindy (class in lasdi.latent_dynamics.sindy)": [[8, "lasdi.latent_dynamics.sindy.SINDy"]], "calibrate() (lasdi.latent_dynamics.sindy.sindy method)": [[8, "lasdi.latent_dynamics.sindy.SINDy.calibrate"]], "coef_norm_order (lasdi.latent_dynamics.sindy.sindy attribute)": [[8, "lasdi.latent_dynamics.sindy.SINDy.coef_norm_order"]], "compute_time_derivative() (lasdi.latent_dynamics.sindy.sindy method)": [[8, "lasdi.latent_dynamics.sindy.SINDy.compute_time_derivative"]], "export() (lasdi.latent_dynamics.sindy.sindy method)": [[8, "lasdi.latent_dynamics.sindy.SINDy.export"]], "fd (lasdi.latent_dynamics.sindy.sindy attribute)": [[8, "lasdi.latent_dynamics.sindy.SINDy.fd"]], "fd_oper (lasdi.latent_dynamics.sindy.sindy attribute)": [[8, "lasdi.latent_dynamics.sindy.SINDy.fd_oper"]], "fd_type (lasdi.latent_dynamics.sindy.sindy attribute)": [[8, "lasdi.latent_dynamics.sindy.SINDy.fd_type"]], "lasdi.latent_dynamics.sindy": [[8, "module-lasdi.latent_dynamics.sindy"]], "ncoefs (lasdi.latent_dynamics.sindy.sindy attribute)": [[8, "lasdi.latent_dynamics.sindy.SINDy.ncoefs"]], "simulate() (lasdi.latent_dynamics.sindy.sindy method)": [[8, "lasdi.latent_dynamics.sindy.SINDy.simulate"]], "autoencoder (class in lasdi.latent_space)": [[9, "lasdi.latent_space.Autoencoder"]], "multilayerperceptron (class in lasdi.latent_space)": [[9, "lasdi.latent_space.MultiLayerPerceptron"]], "act_dict (in module lasdi.latent_space)": [[9, "lasdi.latent_space.act_dict"]], "act_type (lasdi.latent_space.multilayerperceptron attribute)": [[9, "lasdi.latent_space.MultiLayerPerceptron.act_type"]], "decoder (lasdi.latent_space.autoencoder attribute)": [[9, "lasdi.latent_space.Autoencoder.decoder"]], "encoder (lasdi.latent_space.autoencoder attribute)": [[9, "lasdi.latent_space.Autoencoder.encoder"]], "export() (lasdi.latent_space.autoencoder method)": [[9, "lasdi.latent_space.Autoencoder.export"]], "forward() (lasdi.latent_space.autoencoder method)": [[9, "lasdi.latent_space.Autoencoder.forward"]], "forward() (lasdi.latent_space.multilayerperceptron method)": [[9, "lasdi.latent_space.MultiLayerPerceptron.forward"]], "init_weight() (lasdi.latent_space.multilayerperceptron method)": [[9, "lasdi.latent_space.MultiLayerPerceptron.init_weight"]], "initial_condition_latent() (in module lasdi.latent_space)": [[9, "lasdi.latent_space.initial_condition_latent"]], "lasdi.latent_space": [[9, "module-lasdi.latent_space"]], "layer_sizes (lasdi.latent_space.multilayerperceptron attribute)": [[9, "lasdi.latent_space.MultiLayerPerceptron.layer_sizes"]], "layers (lasdi.latent_space.multilayerperceptron attribute)": [[9, "lasdi.latent_space.MultiLayerPerceptron.layers"]], "load() (lasdi.latent_space.autoencoder method)": [[9, "lasdi.latent_space.Autoencoder.load"]], "n_layers (lasdi.latent_space.multilayerperceptron attribute)": [[9, "lasdi.latent_space.MultiLayerPerceptron.n_layers"]], "n_z (lasdi.latent_space.autoencoder attribute)": [[9, "lasdi.latent_space.Autoencoder.n_z"]], "qgrid_size (lasdi.latent_space.autoencoder attribute)": [[9, "lasdi.latent_space.Autoencoder.qgrid_size"]], "reshape_index (lasdi.latent_space.multilayerperceptron attribute)": [[9, "lasdi.latent_space.MultiLayerPerceptron.reshape_index"]], "reshape_shape (lasdi.latent_space.multilayerperceptron attribute)": [[9, "lasdi.latent_space.MultiLayerPerceptron.reshape_shape"]], "space_dim (lasdi.latent_space.autoencoder attribute)": [[9, "lasdi.latent_space.Autoencoder.space_dim"]], "parameterspace (class in lasdi.param)": [[10, "lasdi.param.ParameterSpace"]], "appendtrainspace() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.appendTrainSpace"]], "createhypergridspace() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.createHyperGridSpace"]], "createhypermeshgrid() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.createHyperMeshGrid"]], "createinitialtrainspace() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.createInitialTrainSpace"]], "createtestgridspace() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.createTestGridSpace"]], "create_uniform_1dspace() (in module lasdi.param)": [[10, "lasdi.param.create_uniform_1dspace"]], "export() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.export"]], "getparam1dspace (in module lasdi.param)": [[10, "lasdi.param.getParam1DSpace"]], "getparameter() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.getParameter"]], "get_1dspace_from_list() (in module lasdi.param)": [[10, "lasdi.param.get_1dspace_from_list"]], "lasdi.param": [[10, "module-lasdi.param"]], "load() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.load"]], "n_init (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.n_init"]], "n_param (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.n_param"]], "n_test() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.n_test"]], "n_train() (lasdi.param.parameterspace method)": [[10, "lasdi.param.ParameterSpace.n_train"]], "param_list (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.param_list"]], "param_name (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.param_name"]], "test_grid_sizes (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.test_grid_sizes"]], "test_meshgrid (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.test_meshgrid"]], "test_space (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.test_space"]], "train_space (lasdi.param.parameterspace attribute)": [[10, "lasdi.param.ParameterSpace.train_space"]], "burgers1d (class in lasdi.physics.burgers1d)": [[11, "lasdi.physics.burgers1d.Burgers1D"]], "a_idx (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.a_idx"]], "convergence_threshold (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.convergence_threshold"]], "dim (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.dim"]], "dt (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.dt"]], "dx (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.dx"]], "export() (lasdi.physics.burgers1d.burgers1d method)": [[11, "lasdi.physics.burgers1d.Burgers1D.export"]], "grid_size (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.grid_size"]], "initial_condition() (lasdi.physics.burgers1d.burgers1d method)": [[11, "lasdi.physics.burgers1d.Burgers1D.initial_condition"]], "jacobian() (in module lasdi.physics.burgers1d)": [[11, "lasdi.physics.burgers1d.jacobian"]], "lasdi.physics.burgers1d": [[11, "module-lasdi.physics.burgers1d"]], "main() (in module lasdi.physics.burgers1d)": [[11, "lasdi.physics.burgers1d.main"]], "maxk (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.maxk"]], "nt (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.nt"]], "offline (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.offline"]], "qdim (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.qdim"]], "qgrid_size (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.qgrid_size"]], "residual() (lasdi.physics.burgers1d.burgers1d method)": [[11, "lasdi.physics.burgers1d.Burgers1D.residual"]], "residual_burgers() (in module lasdi.physics.burgers1d)": [[11, "lasdi.physics.burgers1d.residual_burgers"]], "solve() (lasdi.physics.burgers1d.burgers1d method)": [[11, "lasdi.physics.burgers1d.Burgers1D.solve"]], "solver() (in module lasdi.physics.burgers1d)": [[11, "lasdi.physics.burgers1d.solver"]], "t_grid (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.t_grid"]], "tmax (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.tmax"]], "w_idx (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.w_idx"]], "x_grid (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.x_grid"]], "xmax (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.xmax"]], "xmin (lasdi.physics.burgers1d.burgers1d attribute)": [[11, "lasdi.physics.burgers1d.Burgers1D.xmin"]], "offlinefom (class in lasdi.physics)": [[12, "lasdi.physics.OfflineFOM"]], "physics (class in lasdi.physics)": [[12, "lasdi.physics.Physics"]], "dim (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.dim"]], "dim (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.dim"]], "dt (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.dt"]], "dt (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.dt"]], "export() (lasdi.physics.offlinefom method)": [[12, "lasdi.physics.OfflineFOM.export"]], "export() (lasdi.physics.physics method)": [[12, "lasdi.physics.Physics.export"]], "generate_solutions() (lasdi.physics.offlinefom method)": [[12, "lasdi.physics.OfflineFOM.generate_solutions"]], "generate_solutions() (lasdi.physics.physics method)": [[12, "lasdi.physics.Physics.generate_solutions"]], "grid_size (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.grid_size"]], "grid_size (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.grid_size"]], "initial_condition() (lasdi.physics.physics method)": [[12, "lasdi.physics.Physics.initial_condition"]], "lasdi.physics": [[12, "module-lasdi.physics"]], "nt (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.nt"]], "nt (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.nt"]], "offline (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.offline"]], "offline (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.offline"]], "param_name (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.param_name"]], "qdim (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.qdim"]], "qdim (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.qdim"]], "qgrid_size (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.qgrid_size"]], "qgrid_size (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.qgrid_size"]], "residual() (lasdi.physics.physics method)": [[12, "lasdi.physics.Physics.residual"]], "solve() (lasdi.physics.physics method)": [[12, "lasdi.physics.Physics.solve"]], "t_grid (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.t_grid"]], "t_grid (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.t_grid"]], "x_grid (lasdi.physics.offlinefom attribute)": [[12, "lasdi.physics.OfflineFOM.x_grid"]], "x_grid (lasdi.physics.physics attribute)": [[12, "lasdi.physics.Physics.x_grid"]], "compute_errors() (in module lasdi.postprocess)": [[13, "lasdi.postprocess.compute_errors"]], "heatmap2d() (in module lasdi.postprocess)": [[13, "lasdi.postprocess.heatmap2d"]], "lasdi.postprocess": [[13, "module-lasdi.postprocess"]], "plot_gp2d() (in module lasdi.postprocess)": [[13, "lasdi.postprocess.plot_gp2d"]], "plot_prediction() (in module lasdi.postprocess)": [[13, "lasdi.postprocess.plot_prediction"]], "timer (class in lasdi.timing)": [[14, "lasdi.timing.Timer"]], "calls (lasdi.timing.timer attribute)": [[14, "lasdi.timing.Timer.calls"]], "end() (lasdi.timing.timer method)": [[14, "lasdi.timing.Timer.end"]], "export() (lasdi.timing.timer method)": [[14, "lasdi.timing.Timer.export"]], "lasdi.timing": [[14, "module-lasdi.timing"]], "load() (lasdi.timing.timer method)": [[14, "lasdi.timing.Timer.load"]], "names (lasdi.timing.timer attribute)": [[14, "lasdi.timing.Timer.names"]], "print() (lasdi.timing.timer method)": [[14, "lasdi.timing.Timer.print"]], "start() (lasdi.timing.timer method)": [[14, "lasdi.timing.Timer.start"]], "starts (lasdi.timing.timer attribute)": [[14, "lasdi.timing.Timer.starts"]], "times (lasdi.timing.timer attribute)": [[14, "lasdi.timing.Timer.times"]], "collect_samples() (in module lasdi.workflow)": [[15, "lasdi.workflow.collect_samples"]], "initialize_latent_space() (in module lasdi.workflow)": [[15, "lasdi.workflow.initialize_latent_space"]], "initialize_physics() (in module lasdi.workflow)": [[15, "lasdi.workflow.initialize_physics"]], "initialize_trainer() (in module lasdi.workflow)": [[15, "lasdi.workflow.initialize_trainer"]], "lasdi.workflow": [[15, "module-lasdi.workflow"]], "latent_dict (in module lasdi.workflow)": [[15, "lasdi.workflow.latent_dict"]], "ld_dict (in module lasdi.workflow)": [[15, "lasdi.workflow.ld_dict"]], "main() (in module lasdi.workflow)": [[15, "lasdi.workflow.main"]], "parser (in module lasdi.workflow)": [[15, "lasdi.workflow.parser"]], "physics_dict (in module lasdi.workflow)": [[15, "lasdi.workflow.physics_dict"]], "pick_samples() (in module lasdi.workflow)": [[15, "lasdi.workflow.pick_samples"]], "run_samples() (in module lasdi.workflow)": [[15, "lasdi.workflow.run_samples"]], "step() (in module lasdi.workflow)": [[15, "lasdi.workflow.step"]], "trainer_dict (in module lasdi.workflow)": [[15, "lasdi.workflow.trainer_dict"]]}})