Search.setIndex({"docnames": ["autoapi/index", "autoapi/lasdi/enums/index", "autoapi/lasdi/fd/index", "autoapi/lasdi/gp/index", "autoapi/lasdi/gplasdi/index", "autoapi/lasdi/index", "autoapi/lasdi/inputs/index", "autoapi/lasdi/latent_dynamics/edmd/index", "autoapi/lasdi/latent_dynamics/index", "autoapi/lasdi/latent_dynamics/sindy/index", "autoapi/lasdi/latent_space/index", "autoapi/lasdi/param/index", "autoapi/lasdi/physics/burgers1d/index", "autoapi/lasdi/physics/index", "autoapi/lasdi/postprocess/index", "autoapi/lasdi/timing/index", "autoapi/lasdi/workflow/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/lasdi/enums/index.rst", "autoapi/lasdi/fd/index.rst", "autoapi/lasdi/gp/index.rst", "autoapi/lasdi/gplasdi/index.rst", "autoapi/lasdi/index.rst", "autoapi/lasdi/inputs/index.rst", "autoapi/lasdi/latent_dynamics/edmd/index.rst", "autoapi/lasdi/latent_dynamics/index.rst", "autoapi/lasdi/latent_dynamics/sindy/index.rst", "autoapi/lasdi/latent_space/index.rst", "autoapi/lasdi/param/index.rst", "autoapi/lasdi/physics/burgers1d/index.rst", "autoapi/lasdi/physics/index.rst", "autoapi/lasdi/postprocess/index.rst", "autoapi/lasdi/timing/index.rst", "autoapi/lasdi/workflow/index.rst", "index.rst"], "titles": ["API Reference", "lasdi.enums", "lasdi.fd", "lasdi.gp", "lasdi.gplasdi", "lasdi", "lasdi.inputs", "lasdi.latent_dynamics.edmd", "lasdi.latent_dynamics", "lasdi.latent_dynamics.sindy", "lasdi.latent_space", "lasdi.param", "lasdi.physics.burgers1d", "lasdi.physics", "lasdi.postprocess", "lasdi.timing", "lasdi.workflow", "LaSDI documentation"], "terms": {"thi": [0, 1, 11, 15], "page": 0, "contain": [0, 3, 11, 15], "auto": 0, "gener": [0, 1, 3, 12, 13], "document": 0, "1": [0, 1, 2, 7, 8, 9, 10, 12, 13, 14], "lasdi": 0, "enum": [0, 5], "fd": [0, 5, 7, 9], "gp": [0, 5], "gplasdi": [0, 5, 16, 17], "input": [0, 5], "latent_dynam": [0, 4, 5], "edmd": [0, 8], "sindi": [0, 3, 8, 14], "latent_spac": [0, 5], "param": [0, 3, 5, 12, 13, 14], "physic": [0, 4, 5, 10, 11, 14, 16, 17], "burgers1d": [0, 13, 16], "postprocess": [0, 5], "time": [0, 5, 8, 9], "workflow": [0, 5], "creat": 0, "sphinx": 0, "autoapi": 0, "nextstep": 1, "base": [1, 2, 7, 9, 10, 12, 13, 17], "enumer": 1, "deriv": [1, 9], "from": [1, 3, 6, 12, 15], "defin": 1, "new": 1, "train": [1, 3, 4, 7, 9, 11], "picksampl": 1, "2": [1, 2, 12, 13], "runsampl": 1, "3": [1, 2, 7, 9, 12, 13], "collectsampl": 1, "4": [1, 2], "result": 1, "unexecut": 1, "success": 1, "fail": 1, "complet": 1, "stencil": 2, "leftbdrdepth": 2, "0": [2, 4, 10, 11, 12, 13, 14], "leftbdrwidth": 2, "leftbdrstencil": 2, "leftbdrnorm": 2, "interiorstencil": 2, "interiorindex": 2, "getoper": 2, "nx": [2, 12], "period": 2, "fals": [2, 6, 7, 8, 9, 10, 12, 13, 16], "convert": [2, 11], "scipy_coo": 2, "sbp12": 2, "5": [2, 14], "sbp24": 2, "6": [2, 14], "sbp36": 2, "7": 2, "8": 2, "9": 2, "sbp48": 2, "10": [2, 12, 14], "11": 2, "12": 2, "fddict": 2, "fit_gp": 3, "x": [3, 10, 11], "y": 3, "each": [3, 7, 9, 11, 15], "given": [3, 7, 8, 9, 13], "interpol": [3, 17], "dataset": [3, 9], "n_train": [3, 8, 11], "n_param": [3, 11], "numpi": [3, 4, 7, 8, 9, 11, 12, 13], "2d": [3, 4, 8, 9, 11, 12, 13], "arrai": [3, 4, 11, 12, 13], "n_coef": 3, "we": 3, "assum": [3, 9, 12, 13], "target": 3, "coeffici": [3, 8], "i": [3, 6, 7, 8, 9, 11, 15, 16, 17], "independ": 3, "other": 3, "gp_dictionnari": [3, 4, 14], "sklearn": 3, "object": 3, "eval_gp": 3, "param_grid": [3, 4, 10, 11], "comput": [3, 4, 8, 9, 12, 14, 17], "predict": [3, 17], "mean": 3, "standard": [3, 4], "deviat": [3, 4], "point": [3, 7, 8, 9, 11], "paramet": [3, 4, 11, 13, 14], "space": [3, 4, 10, 11, 16, 17], "grid": [3, 4, 11], "sample_coef": 3, "n_sampl": [3, 4, 14], "sampl": [3, 8], "set": [3, 8], "od": [3, 7, 9, 17], "one": [3, 6, 8], "coef_sampl": 3, "list": [3, 4, 6, 11, 15], "length": 3, "where": [3, 11], "term": [3, 9], "matrix": 3, "distribut": 3, "average_rom": 4, "autoencod": [4, 10, 14, 16, 17], "gp_dictionari": 4, "sample_rom": 4, "collect": 4, "rom": [4, 17], "trajectori": 4, "gaussian": [4, 17], "process": [4, 17], "regressor": 4, "size": [4, 9, 11, 13, 15], "n_test": [4, 11], "integ": 4, "assert": 4, "len": [4, 11], "shape": [4, 8, 9, 12, 13], "output": [4, 6, 8, 9, 10, 11], "np": [4, 11], "nt": [4, 7, 8, 9, 12, 13], "n_z": [4, 10], "get_fom_max_std": 4, "zi": 4, "maximum": [4, 14], "accross": 4, "find": [4, 6], "correspond": [4, 6, 7, 9, 11], "locat": 4, "optimizer_to": 4, "optim": 4, "devic": 4, "bayesianglasdi": 4, "param_spac": 4, "config": [4, 7, 9, 10, 11, 16], "x_train": 4, "x_test": [4, 14], "timer": [4, 15], "lr": 4, "n_iter": 4, "max_it": 4, "max_greedy_it": 4, "ld_weight": 4, "coef_weight": 4, "mse": [4, 7, 9], "path_checkpoint": 4, "path_result": 4, "best_loss": 4, "best_coef": 4, "none": [4, 6, 7, 9, 10, 11, 12, 13, 15, 16], "restart_it": 4, "get_new_sample_point": 4, "export": [4, 7, 8, 9, 10, 11, 12, 13, 15], "load": [4, 8, 10, 11, 15], "dict_": [4, 6, 8, 10, 11, 15], "verbos": 6, "inputpars": 6, "dict": [6, 11, 15], "name": [6, 15], "getinput": 6, "kei": [6, 15], "fallback": 6, "datatyp": 6, "valu": [6, 10, 14, 15], "If": [6, 15], "specifi": 6, "do": 6, "exist": 6, "us": [6, 17], "doe": [6, 15], "return": [6, 11, 15], "an": [6, 11], "error": [6, 14], "enforc": 6, "ha": 6, "right": 6, "getdictfromlist": 6, "list_": 6, "inputdict": 6, "get": 6, "val": 6, "note": [6, 15], "onli": [6, 9, 16], "first": 6, "item": 6, "even": 6, "more": 6, "than": 6, "get_function_from_str": 7, "func_str": 7, "dim": [7, 8, 9, 12, 13], "high_order_term": 7, "rand_funct": 7, "latentdynam": [7, 8, 9], "fd_type": [7, 9], "fd_oper": [7, 9], "ncoef": [7, 8, 9], "coef_norm_ord": [7, 9], "calibr": [7, 8, 9], "z": [7, 8, 9], "dt": [7, 8, 9, 12, 13], "compute_loss": [7, 8, 9], "true": [7, 8, 9, 13, 14], "loop": [7, 9], "over": [7, 9], "all": [7, 9, 15], "case": [7, 9], "dimens": [7, 9, 11, 12, 13], "simul": [7, 8, 9], "coef": [7, 8, 9], "z0": [7, 8, 9, 10], "t_grid": [7, 8, 9, 12, 13], "integr": [7, 8, 9], "system": [7, 9, 17], "initi": [7, 8, 9, 10, 11, 16], "condit": [7, 8, 9, 10], "encod": [7, 8, 9, 10], "u0": [7, 9, 10, 12], "dim_": 8, "nt_": 8, "latent": [8, 10, 16, 17], "dynam": [8, 17], "loss": 8, "seri": 8, "3d": [8, 12, 13], "tensor": [8, 9], "time_dim": [8, 9], "space_dim": [8, 9, 10, 12, 13], "coefs_sampl": 8, "z0_sampl": 8, "compute_time_deriv": 9, "build": [9, 11], "linear": 9, "The": [9, 11, 15], "ar": [9, 11], "through": [9, 17], "finit": 9, "differ": 9, "timestep": 9, "uniform": [9, 11], "scalar": 9, "dzdt": 9, "same": [9, 15], "act_dict": 10, "initial_condition_lat": 10, "multilayerperceptron": 10, "layer_s": 10, "act_typ": 10, "sigmoid": 10, "reshape_index": 10, "reshape_shap": 10, "threshold": 10, "num_head": 10, "torch": 10, "nn": 10, "n_layer": 10, "fc": 10, "use_multihead": 10, "forward": 10, "apply_attent": 10, "act_idx": 10, "init_weight": 10, "qgrid_siz": [10, 12, 13], "decod": [10, 17], "get_1dspace_from_list": 11, "create_uniform_1dspac": 11, "getparam1dspac": 11, "parameterspac": 11, "param_list": 11, "param_nam": [11, 12, 13, 16], "train_spac": 11, "test_spac": 11, "n_init": [11, 14], "test_grid_s": 11, "test_meshgrid": 11, "createinitialtrainspac": 11, "createinitialtrainspaceforhul": 11, "concaten": 11, "provid": 11, "A": [11, 15, 17], "dictionari": [11, 15], "mesh_grid": 11, "d": [11, 17], "k": 11, "number": [11, 15], "exterior": 11, "type": [11, 15], "createtestgridspac": 11, "createtestgridspaceforhul": 11, "test": 11, "when": 11, "hull": 11, "gridsiz": 11, "int": [11, 15], "element": 11, "tupl": 11, "nd": [11, 12, 13], "equal": 11, "createtesthullspac": 11, "ani": 11, "which": 11, "within": 11, "convex": 11, "getparamet": 11, "param_vector": 11, "vector": 11, "take": 11, "solv": [11, 12, 13, 17], "initial_condit": [11, 12, 13], "createhypermeshgrid": 11, "param_rang": 11, "1d": [11, 12, 13], "paramspac": 11, "createhypergridspac": 11, "appendtrainspac": 11, "cfg": [12, 13], "a_idx": 12, "w_idx": 12, "qdim": [12, 13], "offlin": [12, 13], "grid_siz": [12, 13], "higher": [12, 13], "xmin": 12, "xmax": 12, "dx": 12, "tmax": 12, "x_grid": [12, 13], "maxk": 12, "convergence_threshold": 12, "1e": 12, "08": 12, "residu": [12, 13], "xhist": [12, 13], "residual_burg": 12, "un": 12, "uw": 12, "c": 12, "idxn1": 12, "burger": 12, "equat": 12, "data": 12, "http": 12, "github": 12, "com": 12, "llnl": 12, "glasdi": [12, 17], "jacobian": 12, "u": 12, "solver": 12, "main": [12, 16], "generate_solut": 13, "solut": [13, 17], "must": [13, 15], "match": 13, "requir": 13, "specif": 13, "offlinefom": 13, "compute_error": 14, "x_pred": 14, "rel": 14, "plot_predict": 14, "scale": 14, "plot_gp2d": 14, "p1_mesh": 14, "p2_mesh": 14, "gp_mean": 14, "gp_std": 14, "param_train": 14, "param_label": 14, "p1": 14, "p2": 14, "plot_shap": 14, "figsiz": 14, "15": 14, "13": 14, "refin": 14, "cm": 14, "plt": 14, "jet": 14, "margin": 14, "05": 14, "heatmap2d": 14, "p1_grid": 14, "p2_grid": 14, "titl": 14, "light": [15, 17], "weight": [15, 17], "map": [15, 17], "job": 15, "indic": 15, "str": 15, "call": 15, "store": 15, "total": 15, "float": 15, "start": 15, "run": 15, "instead": 15, "regist": 15, "arg": 15, "have": 15, "befor": 15, "method": [15, 17], "end": 15, "increas": 15, "runtim": 15, "print": 15, "per": 15, "trainer_dict": 16, "latent_dict": 16, "ld_dict": 16, "physics_dict": 16, "parser": 16, "step": 16, "trainer": 16, "next_step": 16, "use_restart": 16, "initialize_train": 16, "restart_fil": 16, "class": 16, "model": [16, 17], "accord": [16, 17], "file": 16, "current": 16, "avail": 16, "initialize_latent_spac": 16, "ae": 16, "initialize_phys": 16, "fom": 16, "pick_sampl": 16, "run_sampl": 16, "collect_sampl": 16, "python": 17, "packag": 17, "identif": 17, "full": 17, "order": 17, "pde": 17, "learn": 17, "govern": 17, "By": 17, "reduc": 17, "fast": 17, "accur": 17, "can": 17, "made": 17, "feed": 17, "It": 17, "also": 17, "support": 17, "parametr": 17, "uncertainti": 17, "evalu": 17, "via": 17, "api": 17, "bonnevil": 17, "christoph": 17, "xiaolong": 17, "he": 17, "april": 17, "tran": 17, "jun": 17, "sur": 17, "park": 17, "william": 17, "fri": 17, "daniel": 17, "messeng": 17, "siu": 17, "wun": 17, "cheung": 17, "et": 17, "al": 17, "comprehens": 17, "review": 17, "algorithm": 17, "intrus": 17, "non": 17, "arxiv": 17, "preprint": 17, "2403": 17, "10748": 17, "2024": 17, "youngsoo": 17, "choi": 17, "appli": 17, "mechan": 17, "engin": 17, "399": 17, "2022": 17, "115436": 17, "jonathan": 17, "l": 17, "belof": 17, "jiun": 17, "shyan": 17, "chen": 17, "inform": 17, "greedi": 17, "journal": 17, "489": 17, "2023": 17, "112267": 17, "david": 17, "m": 17, "bortz": 17, "weak": 17, "form": 17, "427": 17, "116998": 17, "richard": 17, "yeonjong": 17, "shin": 17, "tlasdi": 17, "thermodynam": 17, "05848": 17, "debojyoti": 17, "ghosh": 17, "interpret": 17, "deep": 17, "418": 17, "116535": 17, "activ": 17, "simultan": 17, "2407": 17, "00337": 17}, "objects": {"": [[5, 0, 0, "-", "lasdi"]], "lasdi": [[1, 0, 0, "-", "enums"], [2, 0, 0, "-", "fd"], [3, 0, 0, "-", "gp"], [4, 0, 0, "-", "gplasdi"], [6, 0, 0, "-", "inputs"], [8, 0, 0, "-", "latent_dynamics"], [10, 0, 0, "-", "latent_space"], [11, 0, 0, "-", "param"], [13, 0, 0, "-", "physics"], [14, 0, 0, "-", "postprocess"], [15, 0, 0, "-", "timing"], [16, 0, 0, "-", "workflow"]], "lasdi.enums": [[1, 1, 1, "", "NextStep"], [1, 1, 1, "", "Result"]], "lasdi.enums.NextStep": [[1, 2, 1, "", "CollectSample"], [1, 2, 1, "", "PickSample"], [1, 2, 1, "", "RunSample"], [1, 2, 1, "", "Train"]], "lasdi.enums.Result": [[1, 2, 1, "", "Complete"], [1, 2, 1, "", "Fail"], [1, 2, 1, "", "Success"], [1, 2, 1, "", "Unexecuted"]], "lasdi.fd": [[2, 3, 1, "", "FDdict"], [2, 1, 1, "", "SBP12"], [2, 1, 1, "", "SBP24"], [2, 1, 1, "", "SBP36"], [2, 1, 1, "", "SBP48"], [2, 1, 1, "", "Stencil"]], "lasdi.fd.SBP12": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.SBP24": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.SBP36": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.SBP48": [[2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.fd.Stencil": [[2, 4, 1, "", "convert"], [2, 4, 1, "", "getOperators"], [2, 2, 1, "", "interiorIndexes"], [2, 2, 1, "", "interiorStencils"], [2, 2, 1, "", "leftBdrDepth"], [2, 2, 1, "", "leftBdrNorm"], [2, 2, 1, "", "leftBdrStencils"], [2, 2, 1, "", "leftBdrWidth"]], "lasdi.gp": [[3, 5, 1, "", "eval_gp"], [3, 5, 1, "", "fit_gps"], [3, 5, 1, "", "sample_coefs"]], "lasdi.gplasdi": [[4, 1, 1, "", "BayesianGLaSDI"], [4, 5, 1, "", "average_rom"], [4, 5, 1, "", "get_fom_max_std"], [4, 5, 1, "", "optimizer_to"], [4, 5, 1, "", "sample_roms"]], "lasdi.gplasdi.BayesianGLaSDI": [[4, 2, 1, "", "MSE"], [4, 2, 1, "", "X_test"], [4, 2, 1, "", "X_train"], [4, 2, 1, "", "autoencoder"], [4, 2, 1, "", "best_coefs"], [4, 2, 1, "", "best_loss"], [4, 2, 1, "", "coef_weight"], [4, 4, 1, "", "export"], [4, 4, 1, "", "get_new_sample_point"], [4, 2, 1, "", "latent_dynamics"], [4, 2, 1, "", "ld_weight"], [4, 4, 1, "", "load"], [4, 2, 1, "", "lr"], [4, 2, 1, "", "max_greedy_iter"], [4, 2, 1, "", "max_iter"], [4, 2, 1, "", "n_iter"], [4, 2, 1, "", "n_samples"], [4, 2, 1, "", "optimizer"], [4, 2, 1, "", "param_space"], [4, 2, 1, "", "path_checkpoint"], [4, 2, 1, "", "path_results"], [4, 2, 1, "", "physics"], [4, 2, 1, "", "restart_iter"], [4, 2, 1, "", "timer"], [4, 4, 1, "", "train"]], "lasdi.inputs": [[6, 1, 1, "", "InputParser"], [6, 5, 1, "", "getDictFromList"], [6, 3, 1, "", "verbose"]], "lasdi.inputs.InputParser": [[6, 2, 1, "", "dict_"], [6, 4, 1, "", "getInput"], [6, 2, 1, "", "name"]], "lasdi.latent_dynamics": [[8, 1, 1, "", "LatentDynamics"], [7, 0, 0, "-", "edmd"], [9, 0, 0, "-", "sindy"]], "lasdi.latent_dynamics.LatentDynamics": [[8, 4, 1, "", "calibrate"], [8, 2, 1, "", "coefs"], [8, 2, 1, "", "dim"], [8, 4, 1, "", "export"], [8, 4, 1, "", "load"], [8, 2, 1, "", "ncoefs"], [8, 2, 1, "", "nt"], [8, 4, 1, "", "sample"], [8, 4, 1, "", "simulate"]], "lasdi.latent_dynamics.edmd": [[7, 1, 1, "", "edmd"], [7, 5, 1, "", "get_function_from_string"]], "lasdi.latent_dynamics.edmd.edmd": [[7, 2, 1, "", "MSE"], [7, 4, 1, "", "calibrate"], [7, 2, 1, "", "coef_norm_order"], [7, 4, 1, "", "export"], [7, 2, 1, "", "fd"], [7, 2, 1, "", "fd_oper"], [7, 2, 1, "", "fd_type"], [7, 2, 1, "", "high_order_terms"], [7, 2, 1, "", "ncoefs"], [7, 2, 1, "", "rand_functions"], [7, 4, 1, "", "simulate"]], "lasdi.latent_dynamics.sindy": [[9, 1, 1, "", "SINDy"]], "lasdi.latent_dynamics.sindy.SINDy": [[9, 2, 1, "", "MSE"], [9, 4, 1, "", "calibrate"], [9, 2, 1, "", "coef_norm_order"], [9, 4, 1, "", "compute_time_derivative"], [9, 4, 1, "", "export"], [9, 2, 1, "", "fd"], [9, 2, 1, "", "fd_oper"], [9, 2, 1, "", "fd_type"], [9, 2, 1, "", "ncoefs"], [9, 4, 1, "", "simulate"]], "lasdi.latent_space": [[10, 1, 1, "", "Autoencoder"], [10, 1, 1, "", "MultiLayerPerceptron"], [10, 3, 1, "", "act_dict"], [10, 5, 1, "", "initial_condition_latent"]], "lasdi.latent_space.Autoencoder": [[10, 2, 1, "", "decoder"], [10, 2, 1, "", "encoder"], [10, 4, 1, "", "export"], [10, 4, 1, "", "forward"], [10, 4, 1, "", "load"], [10, 2, 1, "", "n_z"], [10, 2, 1, "", "qgrid_size"], [10, 2, 1, "", "space_dim"]], "lasdi.latent_space.MultiLayerPerceptron": [[10, 2, 1, "", "act_type"], [10, 4, 1, "", "apply_attention"], [10, 2, 1, "", "fcs"], [10, 4, 1, "", "forward"], [10, 4, 1, "", "init_weight"], [10, 2, 1, "", "layer_sizes"], [10, 2, 1, "", "n_layers"], [10, 2, 1, "", "reshape_index"], [10, 2, 1, "", "reshape_shape"], [10, 2, 1, "", "use_multihead"]], "lasdi.param": [[11, 1, 1, "", "ParameterSpace"], [11, 5, 1, "", "create_uniform_1dspace"], [11, 3, 1, "", "getParam1DSpace"], [11, 5, 1, "", "get_1dspace_from_list"]], "lasdi.param.ParameterSpace": [[11, 4, 1, "", "appendTrainSpace"], [11, 4, 1, "", "createHyperGridSpace"], [11, 4, 1, "", "createHyperMeshGrid"], [11, 4, 1, "", "createInitialTrainSpace"], [11, 4, 1, "", "createInitialTrainSpaceForHull"], [11, 4, 1, "", "createTestGridSpace"], [11, 4, 1, "", "createTestGridSpaceForHull"], [11, 4, 1, "", "createTestHullSpace"], [11, 4, 1, "", "export"], [11, 4, 1, "", "getParameter"], [11, 4, 1, "", "load"], [11, 2, 1, "", "n_init"], [11, 2, 1, "", "n_param"], [11, 4, 1, "", "n_test"], [11, 4, 1, "", "n_train"], [11, 2, 1, "", "param_list"], [11, 2, 1, "", "param_name"], [11, 2, 1, "", "test_grid_sizes"], [11, 2, 1, "", "test_meshgrid"], [11, 2, 1, "", "test_space"], [11, 2, 1, "", "train_space"]], "lasdi.physics": [[13, 1, 1, "", "OfflineFOM"], [13, 1, 1, "", "Physics"], [12, 0, 0, "-", "burgers1d"]], "lasdi.physics.OfflineFOM": [[13, 2, 1, "", "dim"], [13, 2, 1, "", "dt"], [13, 4, 1, "", "export"], [13, 4, 1, "", "generate_solutions"], [13, 2, 1, "", "grid_size"], [13, 2, 1, "", "nt"], [13, 2, 1, "", "offline"], [13, 2, 1, "", "qdim"], [13, 2, 1, "", "qgrid_size"], [13, 2, 1, "", "t_grid"], [13, 2, 1, "", "x_grid"]], "lasdi.physics.Physics": [[13, 2, 1, "", "dim"], [13, 2, 1, "", "dt"], [13, 4, 1, "", "export"], [13, 4, 1, "", "generate_solutions"], [13, 2, 1, "", "grid_size"], [13, 4, 1, "", "initial_condition"], [13, 2, 1, "", "nt"], [13, 2, 1, "", "offline"], [13, 2, 1, "", "param_name"], [13, 2, 1, "", "qdim"], [13, 2, 1, "", "qgrid_size"], [13, 4, 1, "", "residual"], [13, 4, 1, "", "solve"], [13, 2, 1, "", "t_grid"], [13, 2, 1, "", "x_grid"]], "lasdi.physics.burgers1d": [[12, 1, 1, "", "Burgers1D"], [12, 5, 1, "", "jacobian"], [12, 5, 1, "", "main"], [12, 5, 1, "", "residual_burgers"], [12, 5, 1, "", "solver"]], "lasdi.physics.burgers1d.Burgers1D": [[12, 2, 1, "", "a_idx"], [12, 2, 1, "", "convergence_threshold"], [12, 2, 1, "", "dim"], [12, 2, 1, "", "dt"], [12, 2, 1, "", "dx"], [12, 4, 1, "", "export"], [12, 2, 1, "", "grid_size"], [12, 4, 1, "", "initial_condition"], [12, 2, 1, "", "maxk"], [12, 2, 1, "", "nt"], [12, 2, 1, "", "offline"], [12, 2, 1, "", "qdim"], [12, 2, 1, "", "qgrid_size"], [12, 4, 1, "", "residual"], [12, 4, 1, "", "solve"], [12, 2, 1, "", "t_grid"], [12, 2, 1, "", "tmax"], [12, 2, 1, "", "w_idx"], [12, 2, 1, "", "x_grid"], [12, 2, 1, "", "xmax"], [12, 2, 1, "", "xmin"]], "lasdi.postprocess": [[14, 5, 1, "", "compute_errors"], [14, 5, 1, "", "heatmap2d"], [14, 5, 1, "", "plot_gp2d"], [14, 5, 1, "", "plot_prediction"]], "lasdi.timing": [[15, 1, 1, "", "Timer"]], "lasdi.timing.Timer": [[15, 2, 1, "", "calls"], [15, 4, 1, "", "end"], [15, 4, 1, "", "export"], [15, 4, 1, "", "load"], [15, 2, 1, "", "names"], [15, 4, 1, "", "print"], [15, 4, 1, "", "start"], [15, 2, 1, "", "starts"], [15, 2, 1, "", "times"]], "lasdi.workflow": [[16, 5, 1, "", "collect_samples"], [16, 5, 1, "", "initialize_latent_space"], [16, 5, 1, "", "initialize_physics"], [16, 5, 1, "", "initialize_trainer"], [16, 3, 1, "", "latent_dict"], [16, 3, 1, "", "ld_dict"], [16, 5, 1, "", "main"], [16, 3, 1, "", "parser"], [16, 3, 1, "", "physics_dict"], [16, 5, 1, "", "pick_samples"], [16, 5, 1, "", "run_samples"], [16, 5, 1, "", "step"], [16, 3, 1, "", "trainer_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:data", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "data", "Python data"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": [0, 17], "lasdi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "enum": 1, "class": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15], "modul": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16], "content": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "fd": 2, "attribut": [2, 6, 10, 11, 16], "gp": 3, "function": [3, 4, 6, 7, 10, 11, 12, 14, 16], "gplasdi": 4, "submodul": [5, 8, 13], "input": 6, "latent_dynam": [7, 8, 9], "edmd": 7, "packag": [8, 13], "sindi": 9, "latent_spac": 10, "param": 11, "physic": [12, 13], "burgers1d": 12, "postprocess": 14, "time": 15, "workflow": 16, "document": 17}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "lasdi.enums": [[1, "module-lasdi.enums"]], "Classes": [[1, "classes"], [2, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [15, "classes"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"]], "lasdi.fd": [[2, "module-lasdi.fd"]], "Attributes": [[2, "attributes"], [6, "attributes"], [10, "attributes"], [11, "attributes"], [16, "attributes"]], "lasdi.gp": [[3, "module-lasdi.gp"]], "Functions": [[3, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [14, "functions"], [16, "functions"]], "lasdi.gplasdi": [[4, "module-lasdi.gplasdi"]], "lasdi": [[5, "module-lasdi"]], "Submodules": [[5, "submodules"], [8, "submodules"], [13, "submodules"]], "lasdi.inputs": [[6, "module-lasdi.inputs"]], "lasdi.latent_dynamics.edmd": [[7, "module-lasdi.latent_dynamics.edmd"]], "lasdi.latent_dynamics": [[8, "module-lasdi.latent_dynamics"]], "Package Contents": [[8, "package-contents"], [13, "package-contents"]], "lasdi.latent_dynamics.sindy": [[9, "module-lasdi.latent_dynamics.sindy"]], "lasdi.latent_space": [[10, "module-lasdi.latent_space"]], "lasdi.param": [[11, "module-lasdi.param"]], "lasdi.physics.burgers1d": [[12, "module-lasdi.physics.burgers1d"]], "lasdi.physics": [[13, "module-lasdi.physics"]], "lasdi.postprocess": [[14, "module-lasdi.postprocess"]], "lasdi.timing": [[15, "module-lasdi.timing"]], "lasdi.workflow": [[16, "module-lasdi.workflow"]], "LaSDI documentation": [[17, "lasdi-documentation"]], "Contents:": [[17, null]], "References": [[17, "references"]]}, "indexentries": {"collectsample (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.CollectSample"]], "complete (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Complete"]], "fail (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Fail"]], "nextstep (class in lasdi.enums)": [[1, "lasdi.enums.NextStep"]], "picksample (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.PickSample"]], "result (class in lasdi.enums)": [[1, "lasdi.enums.Result"]], "runsample (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.RunSample"]], "success (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Success"]], "train (lasdi.enums.nextstep attribute)": [[1, "lasdi.enums.NextStep.Train"]], "unexecuted (lasdi.enums.result attribute)": [[1, "lasdi.enums.Result.Unexecuted"]], "lasdi.enums": [[1, "module-lasdi.enums"]], "module": [[1, "module-lasdi.enums"], [2, "module-lasdi.fd"], [3, "module-lasdi.gp"], [4, "module-lasdi.gplasdi"], [5, "module-lasdi"], [6, "module-lasdi.inputs"], [7, "module-lasdi.latent_dynamics.edmd"], [8, "module-lasdi.latent_dynamics"], [9, "module-lasdi.latent_dynamics.sindy"], [10, "module-lasdi.latent_space"], [11, "module-lasdi.param"], [12, "module-lasdi.physics.burgers1d"], [13, "module-lasdi.physics"], [14, "module-lasdi.postprocess"], [15, "module-lasdi.timing"], [16, "module-lasdi.workflow"]], "fddict (in module lasdi.fd)": [[2, "lasdi.fd.FDdict"]], "sbp12 (class in lasdi.fd)": [[2, "lasdi.fd.SBP12"]], "sbp24 (class in lasdi.fd)": [[2, "lasdi.fd.SBP24"]], "sbp36 (class in lasdi.fd)": [[2, "lasdi.fd.SBP36"]], "sbp48 (class in lasdi.fd)": [[2, "lasdi.fd.SBP48"]], "stencil (class in lasdi.fd)": [[2, "lasdi.fd.Stencil"]], "convert() (lasdi.fd.stencil method)": [[2, "lasdi.fd.Stencil.convert"]], "getoperators() (lasdi.fd.stencil method)": [[2, "lasdi.fd.Stencil.getOperators"]], "interiorindexes (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.interiorIndexes"]], "interiorindexes (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.interiorIndexes"]], "interiorindexes (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.interiorIndexes"]], "interiorindexes (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.interiorIndexes"]], "interiorindexes (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.interiorIndexes"]], "interiorstencils (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.interiorStencils"]], "interiorstencils (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.interiorStencils"]], "interiorstencils (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.interiorStencils"]], "interiorstencils (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.interiorStencils"]], "interiorstencils (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.interiorStencils"]], "lasdi.fd": [[2, "module-lasdi.fd"]], "leftbdrdepth (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrDepth"]], "leftbdrdepth (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrDepth"]], "leftbdrnorm (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrNorm"]], "leftbdrnorm (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrNorm"]], "leftbdrstencils (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrStencils"]], "leftbdrstencils (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrStencils"]], "leftbdrwidth (lasdi.fd.sbp12 attribute)": [[2, "lasdi.fd.SBP12.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.sbp24 attribute)": [[2, "lasdi.fd.SBP24.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.sbp36 attribute)": [[2, "lasdi.fd.SBP36.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.sbp48 attribute)": [[2, "lasdi.fd.SBP48.leftBdrWidth"]], "leftbdrwidth (lasdi.fd.stencil attribute)": [[2, "lasdi.fd.Stencil.leftBdrWidth"]], "eval_gp() (in module lasdi.gp)": [[3, "lasdi.gp.eval_gp"]], "fit_gps() (in module lasdi.gp)": [[3, "lasdi.gp.fit_gps"]], "lasdi.gp": [[3, "module-lasdi.gp"]], "sample_coefs() (in module lasdi.gp)": [[3, "lasdi.gp.sample_coefs"]], "bayesianglasdi (class in lasdi.gplasdi)": [[4, "lasdi.gplasdi.BayesianGLaSDI"]], "mse (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.MSE"]], "x_test (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.X_test"]], "x_train (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.X_train"]], "autoencoder (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.autoencoder"]], "average_rom() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.average_rom"]], "best_coefs (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.best_coefs"]], "best_loss (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.best_loss"]], "coef_weight (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.coef_weight"]], "export() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.export"]], "get_fom_max_std() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.get_fom_max_std"]], "get_new_sample_point() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.get_new_sample_point"]], "lasdi.gplasdi": [[4, "module-lasdi.gplasdi"]], "latent_dynamics (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.latent_dynamics"]], "ld_weight (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.ld_weight"]], "load() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.load"]], "lr (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.lr"]], "max_greedy_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.max_greedy_iter"]], "max_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.max_iter"]], "n_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.n_iter"]], "n_samples (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.n_samples"]], "optimizer (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.optimizer"]], "optimizer_to() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.optimizer_to"]], "param_space (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.param_space"]], "path_checkpoint (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.path_checkpoint"]], "path_results (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.path_results"]], "physics (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.physics"]], "restart_iter (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.restart_iter"]], "sample_roms() (in module lasdi.gplasdi)": [[4, "lasdi.gplasdi.sample_roms"]], "timer (lasdi.gplasdi.bayesianglasdi attribute)": [[4, "lasdi.gplasdi.BayesianGLaSDI.timer"]], "train() (lasdi.gplasdi.bayesianglasdi method)": [[4, "lasdi.gplasdi.BayesianGLaSDI.train"]], "lasdi": [[5, "module-lasdi"]], "inputparser (class in lasdi.inputs)": [[6, "lasdi.inputs.InputParser"]], "dict_ (lasdi.inputs.inputparser attribute)": [[6, "lasdi.inputs.InputParser.dict_"]], "getdictfromlist() (in module lasdi.inputs)": [[6, "lasdi.inputs.getDictFromList"]], "getinput() (lasdi.inputs.inputparser method)": [[6, "lasdi.inputs.InputParser.getInput"]], "lasdi.inputs": [[6, "module-lasdi.inputs"]], "name (lasdi.inputs.inputparser attribute)": [[6, "lasdi.inputs.InputParser.name"]], "verbose (in module lasdi.inputs)": [[6, "lasdi.inputs.verbose"]], "mse (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.MSE"]], "calibrate() (lasdi.latent_dynamics.edmd.edmd method)": [[7, "lasdi.latent_dynamics.edmd.edmd.calibrate"]], "coef_norm_order (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.coef_norm_order"]], "edmd (class in lasdi.latent_dynamics.edmd)": [[7, "lasdi.latent_dynamics.edmd.edmd"]], "export() (lasdi.latent_dynamics.edmd.edmd method)": [[7, "lasdi.latent_dynamics.edmd.edmd.export"]], "fd (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.fd"]], "fd_oper (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.fd_oper"]], "fd_type (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.fd_type"]], "get_function_from_string() (in module lasdi.latent_dynamics.edmd)": [[7, "lasdi.latent_dynamics.edmd.get_function_from_string"]], "high_order_terms (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.high_order_terms"]], "lasdi.latent_dynamics.edmd": [[7, "module-lasdi.latent_dynamics.edmd"]], "ncoefs (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.ncoefs"]], "rand_functions (lasdi.latent_dynamics.edmd.edmd attribute)": [[7, "lasdi.latent_dynamics.edmd.edmd.rand_functions"]], "simulate() (lasdi.latent_dynamics.edmd.edmd method)": [[7, "lasdi.latent_dynamics.edmd.edmd.simulate"]], "latentdynamics (class in lasdi.latent_dynamics)": [[8, "lasdi.latent_dynamics.LatentDynamics"]], "calibrate() (lasdi.latent_dynamics.latentdynamics method)": [[8, "lasdi.latent_dynamics.LatentDynamics.calibrate"]], "coefs (lasdi.latent_dynamics.latentdynamics attribute)": [[8, "lasdi.latent_dynamics.LatentDynamics.coefs"]], "dim (lasdi.latent_dynamics.latentdynamics attribute)": [[8, "lasdi.latent_dynamics.LatentDynamics.dim"]], "export() (lasdi.latent_dynamics.latentdynamics method)": [[8, "lasdi.latent_dynamics.LatentDynamics.export"]], "lasdi.latent_dynamics": [[8, "module-lasdi.latent_dynamics"]], "load() (lasdi.latent_dynamics.latentdynamics method)": [[8, "lasdi.latent_dynamics.LatentDynamics.load"]], "ncoefs (lasdi.latent_dynamics.latentdynamics attribute)": [[8, "lasdi.latent_dynamics.LatentDynamics.ncoefs"]], "nt (lasdi.latent_dynamics.latentdynamics attribute)": [[8, "lasdi.latent_dynamics.LatentDynamics.nt"]], "sample() (lasdi.latent_dynamics.latentdynamics method)": [[8, "lasdi.latent_dynamics.LatentDynamics.sample"]], "simulate() (lasdi.latent_dynamics.latentdynamics method)": [[8, "lasdi.latent_dynamics.LatentDynamics.simulate"]], "mse (lasdi.latent_dynamics.sindy.sindy attribute)": [[9, "lasdi.latent_dynamics.sindy.SINDy.MSE"]], "sindy (class in lasdi.latent_dynamics.sindy)": [[9, "lasdi.latent_dynamics.sindy.SINDy"]], "calibrate() (lasdi.latent_dynamics.sindy.sindy method)": [[9, "lasdi.latent_dynamics.sindy.SINDy.calibrate"]], "coef_norm_order (lasdi.latent_dynamics.sindy.sindy attribute)": [[9, "lasdi.latent_dynamics.sindy.SINDy.coef_norm_order"]], "compute_time_derivative() (lasdi.latent_dynamics.sindy.sindy method)": [[9, "lasdi.latent_dynamics.sindy.SINDy.compute_time_derivative"]], "export() (lasdi.latent_dynamics.sindy.sindy method)": [[9, "lasdi.latent_dynamics.sindy.SINDy.export"]], "fd (lasdi.latent_dynamics.sindy.sindy attribute)": [[9, "lasdi.latent_dynamics.sindy.SINDy.fd"]], "fd_oper (lasdi.latent_dynamics.sindy.sindy attribute)": [[9, "lasdi.latent_dynamics.sindy.SINDy.fd_oper"]], "fd_type (lasdi.latent_dynamics.sindy.sindy attribute)": [[9, "lasdi.latent_dynamics.sindy.SINDy.fd_type"]], "lasdi.latent_dynamics.sindy": [[9, "module-lasdi.latent_dynamics.sindy"]], "ncoefs (lasdi.latent_dynamics.sindy.sindy attribute)": [[9, "lasdi.latent_dynamics.sindy.SINDy.ncoefs"]], "simulate() (lasdi.latent_dynamics.sindy.sindy method)": [[9, "lasdi.latent_dynamics.sindy.SINDy.simulate"]], "autoencoder (class in lasdi.latent_space)": [[10, "lasdi.latent_space.Autoencoder"]], "multilayerperceptron (class in lasdi.latent_space)": [[10, "lasdi.latent_space.MultiLayerPerceptron"]], "act_dict (in module lasdi.latent_space)": [[10, "lasdi.latent_space.act_dict"]], "act_type (lasdi.latent_space.multilayerperceptron attribute)": [[10, "lasdi.latent_space.MultiLayerPerceptron.act_type"]], "apply_attention() (lasdi.latent_space.multilayerperceptron method)": [[10, "lasdi.latent_space.MultiLayerPerceptron.apply_attention"]], "decoder (lasdi.latent_space.autoencoder attribute)": [[10, "lasdi.latent_space.Autoencoder.decoder"]], "encoder (lasdi.latent_space.autoencoder attribute)": [[10, "lasdi.latent_space.Autoencoder.encoder"]], "export() (lasdi.latent_space.autoencoder method)": [[10, "lasdi.latent_space.Autoencoder.export"]], "fcs (lasdi.latent_space.multilayerperceptron attribute)": [[10, "lasdi.latent_space.MultiLayerPerceptron.fcs"]], "forward() (lasdi.latent_space.autoencoder method)": [[10, "lasdi.latent_space.Autoencoder.forward"]], "forward() (lasdi.latent_space.multilayerperceptron method)": [[10, "lasdi.latent_space.MultiLayerPerceptron.forward"]], "init_weight() (lasdi.latent_space.multilayerperceptron method)": [[10, "lasdi.latent_space.MultiLayerPerceptron.init_weight"]], "initial_condition_latent() (in module lasdi.latent_space)": [[10, "lasdi.latent_space.initial_condition_latent"]], "lasdi.latent_space": [[10, "module-lasdi.latent_space"]], "layer_sizes (lasdi.latent_space.multilayerperceptron attribute)": [[10, "lasdi.latent_space.MultiLayerPerceptron.layer_sizes"]], "load() (lasdi.latent_space.autoencoder method)": [[10, "lasdi.latent_space.Autoencoder.load"]], "n_layers (lasdi.latent_space.multilayerperceptron attribute)": [[10, "lasdi.latent_space.MultiLayerPerceptron.n_layers"]], "n_z (lasdi.latent_space.autoencoder attribute)": [[10, "lasdi.latent_space.Autoencoder.n_z"]], "qgrid_size (lasdi.latent_space.autoencoder attribute)": [[10, "lasdi.latent_space.Autoencoder.qgrid_size"]], "reshape_index (lasdi.latent_space.multilayerperceptron attribute)": [[10, "lasdi.latent_space.MultiLayerPerceptron.reshape_index"]], "reshape_shape (lasdi.latent_space.multilayerperceptron attribute)": [[10, "lasdi.latent_space.MultiLayerPerceptron.reshape_shape"]], "space_dim (lasdi.latent_space.autoencoder attribute)": [[10, "lasdi.latent_space.Autoencoder.space_dim"]], "use_multihead (lasdi.latent_space.multilayerperceptron attribute)": [[10, "lasdi.latent_space.MultiLayerPerceptron.use_multihead"]], "parameterspace (class in lasdi.param)": [[11, "lasdi.param.ParameterSpace"]], "appendtrainspace() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.appendTrainSpace"]], "createhypergridspace() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.createHyperGridSpace"]], "createhypermeshgrid() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.createHyperMeshGrid"]], "createinitialtrainspace() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.createInitialTrainSpace"]], "createinitialtrainspaceforhull() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.createInitialTrainSpaceForHull"]], "createtestgridspace() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.createTestGridSpace"]], "createtestgridspaceforhull() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.createTestGridSpaceForHull"]], "createtesthullspace() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.createTestHullSpace"]], "create_uniform_1dspace() (in module lasdi.param)": [[11, "lasdi.param.create_uniform_1dspace"]], "export() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.export"]], "getparam1dspace (in module lasdi.param)": [[11, "lasdi.param.getParam1DSpace"]], "getparameter() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.getParameter"]], "get_1dspace_from_list() (in module lasdi.param)": [[11, "lasdi.param.get_1dspace_from_list"]], "lasdi.param": [[11, "module-lasdi.param"]], "load() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.load"]], "n_init (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.n_init"]], "n_param (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.n_param"]], "n_test() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.n_test"]], "n_train() (lasdi.param.parameterspace method)": [[11, "lasdi.param.ParameterSpace.n_train"]], "param_list (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.param_list"]], "param_name (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.param_name"]], "test_grid_sizes (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.test_grid_sizes"]], "test_meshgrid (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.test_meshgrid"]], "test_space (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.test_space"]], "train_space (lasdi.param.parameterspace attribute)": [[11, "lasdi.param.ParameterSpace.train_space"]], "burgers1d (class in lasdi.physics.burgers1d)": [[12, "lasdi.physics.burgers1d.Burgers1D"]], "a_idx (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.a_idx"]], "convergence_threshold (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.convergence_threshold"]], "dim (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.dim"]], "dt (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.dt"]], "dx (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.dx"]], "export() (lasdi.physics.burgers1d.burgers1d method)": [[12, "lasdi.physics.burgers1d.Burgers1D.export"]], "grid_size (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.grid_size"]], "initial_condition() (lasdi.physics.burgers1d.burgers1d method)": [[12, "lasdi.physics.burgers1d.Burgers1D.initial_condition"]], "jacobian() (in module lasdi.physics.burgers1d)": [[12, "lasdi.physics.burgers1d.jacobian"]], "lasdi.physics.burgers1d": [[12, "module-lasdi.physics.burgers1d"]], "main() (in module lasdi.physics.burgers1d)": [[12, "lasdi.physics.burgers1d.main"]], "maxk (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.maxk"]], "nt (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.nt"]], "offline (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.offline"]], "qdim (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.qdim"]], "qgrid_size (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.qgrid_size"]], "residual() (lasdi.physics.burgers1d.burgers1d method)": [[12, "lasdi.physics.burgers1d.Burgers1D.residual"]], "residual_burgers() (in module lasdi.physics.burgers1d)": [[12, "lasdi.physics.burgers1d.residual_burgers"]], "solve() (lasdi.physics.burgers1d.burgers1d method)": [[12, "lasdi.physics.burgers1d.Burgers1D.solve"]], "solver() (in module lasdi.physics.burgers1d)": [[12, "lasdi.physics.burgers1d.solver"]], "t_grid (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.t_grid"]], "tmax (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.tmax"]], "w_idx (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.w_idx"]], "x_grid (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.x_grid"]], "xmax (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.xmax"]], "xmin (lasdi.physics.burgers1d.burgers1d attribute)": [[12, "lasdi.physics.burgers1d.Burgers1D.xmin"]], "offlinefom (class in lasdi.physics)": [[13, "lasdi.physics.OfflineFOM"]], "physics (class in lasdi.physics)": [[13, "lasdi.physics.Physics"]], "dim (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.dim"]], "dim (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.dim"]], "dt (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.dt"]], "dt (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.dt"]], "export() (lasdi.physics.offlinefom method)": [[13, "lasdi.physics.OfflineFOM.export"]], "export() (lasdi.physics.physics method)": [[13, "lasdi.physics.Physics.export"]], "generate_solutions() (lasdi.physics.offlinefom method)": [[13, "lasdi.physics.OfflineFOM.generate_solutions"]], "generate_solutions() (lasdi.physics.physics method)": [[13, "lasdi.physics.Physics.generate_solutions"]], "grid_size (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.grid_size"]], "grid_size (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.grid_size"]], "initial_condition() (lasdi.physics.physics method)": [[13, "lasdi.physics.Physics.initial_condition"]], "lasdi.physics": [[13, "module-lasdi.physics"]], "nt (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.nt"]], "nt (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.nt"]], "offline (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.offline"]], "offline (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.offline"]], "param_name (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.param_name"]], "qdim (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.qdim"]], "qdim (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.qdim"]], "qgrid_size (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.qgrid_size"]], "qgrid_size (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.qgrid_size"]], "residual() (lasdi.physics.physics method)": [[13, "lasdi.physics.Physics.residual"]], "solve() (lasdi.physics.physics method)": [[13, "lasdi.physics.Physics.solve"]], "t_grid (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.t_grid"]], "t_grid (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.t_grid"]], "x_grid (lasdi.physics.offlinefom attribute)": [[13, "lasdi.physics.OfflineFOM.x_grid"]], "x_grid (lasdi.physics.physics attribute)": [[13, "lasdi.physics.Physics.x_grid"]], "compute_errors() (in module lasdi.postprocess)": [[14, "lasdi.postprocess.compute_errors"]], "heatmap2d() (in module lasdi.postprocess)": [[14, "lasdi.postprocess.heatmap2d"]], "lasdi.postprocess": [[14, "module-lasdi.postprocess"]], "plot_gp2d() (in module lasdi.postprocess)": [[14, "lasdi.postprocess.plot_gp2d"]], "plot_prediction() (in module lasdi.postprocess)": [[14, "lasdi.postprocess.plot_prediction"]], "timer (class in lasdi.timing)": [[15, "lasdi.timing.Timer"]], "calls (lasdi.timing.timer attribute)": [[15, "lasdi.timing.Timer.calls"]], "end() (lasdi.timing.timer method)": [[15, "lasdi.timing.Timer.end"]], "export() (lasdi.timing.timer method)": [[15, "lasdi.timing.Timer.export"]], "lasdi.timing": [[15, "module-lasdi.timing"]], "load() (lasdi.timing.timer method)": [[15, "lasdi.timing.Timer.load"]], "names (lasdi.timing.timer attribute)": [[15, "lasdi.timing.Timer.names"]], "print() (lasdi.timing.timer method)": [[15, "lasdi.timing.Timer.print"]], "start() (lasdi.timing.timer method)": [[15, "lasdi.timing.Timer.start"]], "starts (lasdi.timing.timer attribute)": [[15, "lasdi.timing.Timer.starts"]], "times (lasdi.timing.timer attribute)": [[15, "lasdi.timing.Timer.times"]], "collect_samples() (in module lasdi.workflow)": [[16, "lasdi.workflow.collect_samples"]], "initialize_latent_space() (in module lasdi.workflow)": [[16, "lasdi.workflow.initialize_latent_space"]], "initialize_physics() (in module lasdi.workflow)": [[16, "lasdi.workflow.initialize_physics"]], "initialize_trainer() (in module lasdi.workflow)": [[16, "lasdi.workflow.initialize_trainer"]], "lasdi.workflow": [[16, "module-lasdi.workflow"]], "latent_dict (in module lasdi.workflow)": [[16, "lasdi.workflow.latent_dict"]], "ld_dict (in module lasdi.workflow)": [[16, "lasdi.workflow.ld_dict"]], "main() (in module lasdi.workflow)": [[16, "lasdi.workflow.main"]], "parser (in module lasdi.workflow)": [[16, "lasdi.workflow.parser"]], "physics_dict (in module lasdi.workflow)": [[16, "lasdi.workflow.physics_dict"]], "pick_samples() (in module lasdi.workflow)": [[16, "lasdi.workflow.pick_samples"]], "run_samples() (in module lasdi.workflow)": [[16, "lasdi.workflow.run_samples"]], "step() (in module lasdi.workflow)": [[16, "lasdi.workflow.step"]], "trainer_dict (in module lasdi.workflow)": [[16, "lasdi.workflow.trainer_dict"]]}})